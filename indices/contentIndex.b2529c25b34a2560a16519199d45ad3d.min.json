{"/":{"title":"Lectern","content":"\nWelcome to the Lectern, [Arash’s](https://arashnrim.me) digital garden meant to share whatever I know with the public in a presentable manner.\n\nI was inspired by the concept of learning in public for a long time now, and I found that making a digital garden could prove to be a viable step forward in showing that. This digital garden may be specific, but I hope that over time, it can grow into something I can look back on and also refer others to.\n\nFeel free to explore more here, and share whatever you know with me as well! If there’s anything that’s factually incorrect that you’re willing to correct, please feel free to contact me.\n\n# What’s here?\n\nThere’s not a lot at the moment, but here’s some tags you could take a look at!\n\n- [Social](tags/social) — notes related to interactions between people or the state of society.\n- [Productivity](tags/productivity) — notes related to the state of putting in work, often related to optimising processes.\n- [Technology](tags/technology) — notes related to technology, including computers, databases, languages, frameworks, and tools. Subtags under technology includes:\n\t- [Cloud](tags/cloud) — notes related to cloud programming, including architecture, formats, and economics;\n\t- [Computers](tags/computers) — notes related to computing;\n\t- [Databases](tags/databases) — notes related to database systems and database management systems;\n\t- [Development](tags/development) — notes related to object-oriented analysis and design, in particular how software is made;\n\t- [Networking](tags/networking) — notes related to networking theory; and\n\t- [Programming](tags/programming) — notes related to programming theory.\n- [Mathematics](tags/mathematics) — notes about different mathematical concepts.","lastmodified":"2023-04-25T01:21:29.101539157Z","tags":[]},"/.trash/memory-management.sync-conflict-20221213-113924-YWPINYS":{"title":"Memory management","content":"\nRefers to the allocation of resources to each program by the [[technology/computers/operating-system|operating system]]. Heavily involves the [[technology/computers/random-access-memory|random access memory]] as a resource used by programs as a working space.\n\nA memory manager has several tasks in particular:\n- allocating portions of the main memory to various programs at their request;\n- freeing portions of the main memory when no longer needed;\n- keeping track of the status of each location of the main memory; and\n- protecting the memory allocated to a program from unauthorised access by other programs.\n\nThe [[technology/computers/operating-system-kernel|kernel]] is the part of the operating system always in the RAM as long as the computer is turned on.\n\n# Memory address\n\nA location, often in the form of a binary number, located on the memory. It can be referenced to access the content stored in-memory at that particular location. Starts from 0 to a maximum number defined by the amount of RAM in the computer.\n\nTo calculate the range of an address space provided the amount of RAM, given that $b$ is the number of bytes, find the number of bits $n$ by using $\\frac {log(b)} {log(2)}$ and use that to find the maximum value ($\\frac n 4$ `F`s).\n\nThe number of bits an address has is dependent on the [[technology/computers/computer-architecture#von Neumann computer architecture|address bus]]'s width.\n\n# Memory content\n\nA particular address can store **eight bits** (one byte) of information; this information could be either a part of an instruction or data.\n\n# Frames, pages, and page tables\n\nFrames refer to compartments brought about due to the *physical* memory's storage. Pages, on the other hand, are *virtual* and refer to references created by the CPU.\n- The typical size of a frame is **4096 bytes** (4 KiB).\n- The size of a frame **must match** the size of the page.\n- Expressed differently, data or instructions are stored in the memory as frames. When the CPU references and reads or writes the memory, the CPU handles them as pages.\n\n## Page tables\n\nTo bridge the link between frames and pages, memory managers often create a page table for each process. Page tables are data structures used by the memory manager to keep track of which page corresponds to which frame.\n\nPage tables include a valid or invalid control bit which is used to tell whether or not a page is in the physical memory. In the case of demand paging, where data can be stored on the secondary storage temporarily, the control bit will be 0 (demarking it as not in the physical memory).\n\n# Logical and physical memory\n\nThe logical memory is the memory as seen as pages (i.e., seen by the CPU). The logical memory stores pages by the CPU and can be purged at any time.\n\nThe physical memory is the memory stored as-is physically, and is seen as frames.\n\n# Virtual memory and demand paging\n\nMultiple programs may be loaded into the physical memory at once (in [[technology/computers/operating-system#Multi-tasking and multi-user OSs|multi-tasking operating systems]]). The total memory size required by the OS and all the programs may exceed the physical memory size; in this event, the OS uses virtual memory to compensate. This space is known as a swap space; on Linux, this space is a partition called `swap` while on Windows, this space is in a file named `pagefile.sys`.\n- This method makes use of the available space on the secondary storage to store programs.\n- The OS moves inactive data from the physical memory to the temporary space in the secondary storage.\n- The memory manager than swaps data to and fro the storage and memory when required.\n\nTrashing refers to the excessive swapping of pages and data between the memory and secondary storage; this causes the program to operate more slowly.","lastmodified":"2023-04-25T01:21:29.101539157Z","tags":["technology","computers"]},"/.trash/memory-management.sync-conflict-20221213-114015-YWPINYS":{"title":"Memory management","content":"\nRefers to the allocation of resources to each program by the [[technology/computers/operating-system|operating system]]. Heavily involves the [[technology/computers/random-access-memory|random access memory]] as a resource used by programs as a working space.\n\nA memory manager has several tasks in particular:\n- allocating portions of the main memory to various programs at their request;\n- freeing portions of the main memory when no longer needed;\n- keeping track of the status of each location of the main memory; and\n- protecting the memory allocated to a program from unauthorised access by other programs.\n\nThe [[technology/computers/operating-system-kernel|kernel]] is the part of the operating system always in the RAM as long as the computer is turned on.\n\n# Memory address\n\nA location, often in the form of a binary number, located on the memory. It can be referenced to access the content stored in-memory at that particular location. Starts from 0 to a maximum number defined by the amount of RAM in the computer.\n\nTo calculate the range of an address space provided the amount of RAM, given that $b$ is the number of bytes, find the number of bits $n$ by using $\\frac {log(b)} {log(2)}$ and use that to find the maximum value ($\\frac n 4$ `F`s).\n\nThe number of bits an address has is dependent on the [[technology/computers/computer-architecture#von Neumann computer architecture|address bus]]'s width.\n\n# Memory content\n\nA particular address can store **eight bits** (one byte) of information; this information could be either a part of an instruction or data.\n\n# Frames, pages, and page tables\n\nFrames refer to compartments brought about due to the *physical* memory's storage. Pages, on the other hand, are *virtual* and refer to references created by the CPU.\n- The typical size of a frame is **4096 bytes** (4 KiB).\n- The size of a frame **must match** the size of the page.\n- Expressed differently, data or instructions are stored in the memory as frames. When the CPU references and reads or writes the memory, the CPU handles them as pages.\n\n## Page tables\n\nTo bridge the link between frames and pages, memory managers often create a page table for each process. Page tables are data structures used by the memory manager to keep track of which page corresponds to which frame.\n\nPage tables include a valid or invalid control bit which is used to tell whether or not a page is in the physical memory. In the case of demand paging, where data can be stored on the secondary storage temporarily, the control bit will be 0 (demarking it as not in the physical memory).\n\n# Logical and physical memory\n\nThe logical memory is the memory as seen as pages (i.e., seen by the CPU). The logical memory stores pages by the CPU and can be purged at any time.\n\nThe physical memory is the memory stored as-is physically, and is seen as frames.\n\n# Virtual memory and demand paging\n\nMultiple programs may be loaded into the physical memory at once (in [[technology/computers/operating-system#Multi-tasking and multi-user OSs|multi-tasking operating systems]]). The total memory size required by the OS and all the programs may exceed the physical memory size; in this event, the OS uses virtual memory to compensate. This space is known as a swap space; on Linux, this space is a partition called `swap` while on Windows, this space is in a file named `pagefile.sys`.\n- This method makes use of the available space on the secondary storage to store programs.\n- The OS moves inactive data from the physical memory to the temporary space in the secondary storage.\n- The memory manager than swaps data to and fro the storage and memory when required.\n\nTrashing refers to the excessive swapping of pages and data between the memory and secondary storage; this causes the program to operate more slowly.\n\nA computer on low memory may exhibit several signs:\n- running and executing programs slowly;\n- having high thrashing acti;","lastmodified":"2023-04-25T01:21:29.101539157Z","tags":["technology","computers"]},"/mathematics/combination":{"title":"Combination","content":"\nThe arrangement of a given number of items **without the consideration of order**. Not to be confused with [[mathematics/permutation|permutations]], which is similar but with consideration of order.\n\nProvided:\n- the number of distinct items to choose, $n$ (things you have); and\n- the number of combinations, $r$ ('slots' to fill)\n$$\n^nC_r = \\frac {^nP_r} {r!} = \\frac {\\frac {n!} {(n-r)!}} {r!} = \\frac {n!} {r!(n-r)!}\n$$\n\nWhere restrictions are applicable, it is important to deal with them first. Some common restrictions include:\n- the use of binary genders in a group of people.\n\n# Examples\n\n- How many ways are there to select 2 students from a class of 20 students?\n\t- 2 students, 20 students: no detail of order needed\n- How many ways are there to choose 5 students from a class of 20 students to participate in a gaming competition?\n\t- 5 students, 20 students: no detail of order needed\n","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["mathematics"]},"/mathematics/permutation":{"title":"Permutation","content":"\nThe arrangement of a given number of items **in a particular order**. Not to be confused with [[mathematics/combination|combinations]], which is similar but without consideration of order.\n\nProvided:\n- the number of distinct items to choose, $n$ (things you have); and\n- the number of permutations, $r$ ('slots' to fill)\n$$\n^nP_r = n \\times (n-1) \\times ... \\times (n-r+1) = \\frac {n!} {(n-r)!}\n$$\n\nWhen there are duplicates, they must be removed. In order to do so, the following formula is used:\n$$\n\\frac {r!} {r_{dup}!}\n$$\nwhere:\n- $r$ is the number of distinct items; and\n- $r_{dup}$ is the number of duplicated items (one for each).\n\nWhere restrictions are applicable, it is important to deal with them first. Some common restrictions include:\n- the use even and odd numbers; and\n- the use of non-zero numbers.\n\n# Examples\n\nThe following are some examples of permutations. Note how order plays a role in each case respectively:\n\n- How many 3-letter word arrangements can be formed from the letters \"A\", \"B\", \"C\", \"D\", and \"E\" in all possible orders with no repetition of letters?\n\t- 3-letter word: 'slots' to fill ($n$)\n\t- letters A to E: distinct items to choose ($r$)\n\t- all possible orders: order matters\n- How many ways are there to arrange the letters in the word \"ELEMENTAL\" with no repetition of letters?\n\t- no repetition of letters: duplicating items need to be removed\n\t- \"ELEMENTAL\": (three) repeated Es, (two) repeated Ls\n- How many ways are there to choose 2 students from a class of 20 students, so as to make the first person a class representative, and the second a class treasurer?\n\t- first class representative, second class treasurer: order matters\n","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["mathematics"]},"/mathematics/statistics/continuous-probability-distribution":{"title":"Continuous probability distribution","content":"\nA continuous probability distribution is the probability distribution of a continuous random variable. A common distribution is the normal distribution.\n\nGenerally, the probability of a continuous set of data can be found through the area under the graph. This applies to density functions that are rectangular, linear, or triangular in nature and more. Therefore, if a probability is asked for a specific singular value (e.g., $P(X = a)$), the answer will always be 0.\n\n# Normal distribution\n\nAlso known as the normal curve or Gaussian distribution. Its curve follows the shape of a bell-shaped curve and it describes many sets of data that occur. The curve is symmetrical about a vertical axis through the mean $\\mu$.\n\n$\\mu$ offsets the location of the bell-shaped curve horizontally; $\\sigma$ offsets the height (proportional) and spread (inversely proportional) of the bell-shaped curve.\n\nA normal distribution is only valid if three conditions are met:\n- $f(X) \u003e 0$ for all values of $x$. In other words, the graph must be above the x-axis.\n- The total area under the curve must be equal to 1.\n- The normal curve must be symmetric about the vertical axis at $x = \\mu$. This means that the area to the left or right of $\\mu$ are both $\\frac 1 2$.\n\nThe notation to describe a normal distribution is:\n$$\nX \\sim N(\\mu, \\sigma^2)\n$$\n\nThere are certain values that are good to know when it comes to the area bound between standard deviations.\n![[images/normal-distribution-curve-area.png]]\n- $P(\\mu - \\sigma \u003c X \u003c \\mu + \\sigma) = 0.68$\n- $P(\\mu - 2\\sigma \u003c X \u003c \\mu + 2\\sigma) = 0.95$\n- $P(\\mu - 3\\sigma \u003c X \u003c \\mu + 3\\sigma) = 0.997$\n\n## Standard normal distribution\nTo compute the area for different normal curves with different $\\mu$ and $\\sigma$ values, standardisation needs to be done. This standard form is known as standard normal distribution. A standard normal distribution has the following notation:\n$$\nZ \\sim N(0, 1)\n$$\nStandard normal distribution standardises the different normal curves into one with a mean of 0 and a standard deviation of 1.\n\nOnce standardised, any normal distribution can be used together with the standard normal Z-table to compute the area under all different curves.\n\nIn order to standardise a random variable $X$ into its standardised value $Z$, the following formula needs to be done:\n$$\nZ = \\frac {X - \\mu} \\sigma\n$$\nIn order to read the standard normal Z-table, the value of $z$ must be a positive value.\n\nUsing the standard normal Z-table, we can find $\\phi (z)$. It is important to note the following:\n$$\n\\phi (z) = P(Z \\leq z)\n$$\n\n## Normal approximation to [[mathematics/statistics/discrete-probability-distribution|discrete probability distributions]]\n\nSince normal distribution is a form of continuous probabiity distribution, while it is possible to approximate it to a discrete probability distribution, continuity correction must be done to convert the discrete random variable into one of continuous nature.\n\nGenerally, to perform continuity correction, each discrete number must be treated as a continuous interval between a $\\pm$ 0.5 value.\n\n\u003e \t**Example**\n\u003e Provided $X = 1$, correction will be done such that $X$ becomes a range ($0.5 \u003c X \u003c 1.5$).\n\n### Normal approximation from [[mathematics/statistics/discrete-probability-distribution#Binomial distribution|binomial distribution]]\nWhen a binomial distribution has a high number of independent trails ($n$) and a low probability ($p$), we can approximate the binomial distribution into a normal distribution.\n\nExpressed mathematically, when $n \\to \\infty, \\space p \\approx 0.5$ such that $np \u003e 5, nq \u003e 5$,\n$$\nX \\sim B(n, p) \\approx X \\sim N (np, npq)\n$$\n### Normal approximation from [[mathematics/statistics/discrete-probability-distribution#Poisson distribution|Poisson distribution]]\nWhen a Poisson distribution has an average value ($\\lambda$) sufficiently larger than its square root ($\\sqrt \\lambda$), we can approximate the Poisson distribution into a normal distribution.\n\nExpressed mathematically, when $\\lambda \u003e 10$:\n$$\nX \\sim P_O (\\lambda) \\approx X \\sim N (\\lambda, \\lambda)\n$$\n## Normal approximation to [[mathematics/statistics/sampling#Sampling distribution of the sample mean|sampling distribution of the sample mean]]\nIf $X_1, X_2, ..., X_n$ is a random sample (of size $n$) taken from a population where $X \\sim N (\\mu, \\sigma^2)$, then the sample mean ($\\bar X$) follows a normal distribution.\n\nExpressed mathematically, when $X \\sim N (\\mu, \\sigma^2)$,\n$$\n\\bar X \\sim N(\\mu, \\frac {\\sigma^2} n)\n$$\n## Central Limit Theorem\nThe Theorem states that if $X_1, X_2, ..., X_n$ is a random sample of a large size $n$ (where $n \\geq 30$) and $X$ is of any distribution with mean $\\mu$ and variance $\\sigma^2$, the sample mean ($\\bar X$) is approximately normal.\n\nExpressed mathematically, when $n \\geq 30$ and $\\mu$ and $\\sigma^2$ are present,\n$$\n\\bar X \\sim N(\\mu, \\frac {\\sigma^2} n)\n$$\n\n# $t$-distribution\n\nA $t$-distribution is a type of normal distribution used for sample sizes that are small (where $n \u003c 30$). It looks similar to a normal $z$-distribution, but differs slightly. As the $df$ of a $t$-distribute increases, the closer it gets to being a $z$-distribution.\n\n$t$-distributions are varied in shape through the degree of freedom $df$ they have. The degree of freedom is equal to the difference of one from the sample size. Expressed mathematically:\n$$\ndf = n - 1\n$$\n\nIn order to find the value in a $t$-distribution, the following formula needs to be done:\n$$\nt = \\frac {\\bar X - \\mu} {\\frac s {\\sqrt n}}\n$$\nwhere:\n- $\\bar X$ is the sample mean;\n- $\\mu$ is the population mean;\n- $s$ is the sample standard deviation; and\n- $n$ is the sample size.\n\nThe $t$-distribution is not dependent on the population variance; therefore, it may be used in place of the $z$-distribution where:\n- the population variance is unknown; or\n- the sample size is small ($n \u003c 30$).","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["mathematics"]},"/mathematics/statistics/discrete-probability-distribution":{"title":"Discrete probability distribution","content":"\nA random variable can be discrete if it has:\n- a finite number of values; or\n- an infinite but countable number of values.\n\nA discrete probability distribution, therefore, is the probabity distribution of a discrete random variable (one that has a finite number of values). Two common distributions include the:\n- binomial distribution; and\n- Poisson distribution.\n\n# Binomial distribution\n\nA binomial distribution is only valid if four conditions are met (**2pin**):\n- Each trial of the experiment must result in only two (**2**) outcomes (e.g., yes or no; success or failure).\n- The probability (**p**) of a successful outcome is constant for each trial.\n- The trials are independent (**i**) of one another — i.e., the result of one trial does not affect another.\n- There are a finite number (**n**) of trials in the experiment.\n\nIn an experiment of $n$ independent trials,\n- $p$ is the probability of a successful outcome; and\n- $X$ is the random variable.\n\nThe notation to describe a binomial distribution is:\n$$\nX \\sim B (n, p)\n$$\nProvided a binomial distribution, the probability when $X = a$ is denoted by the following formula:\n$$\nP(X = a) = {^n}C_a \\space p^a \\space q^{n-a}\n$$\n(where $q = 1 - p$)\n\nThe expected value or mean of the distribution is denoted by the following:\n$$\nE(X) = np\n$$\nThe variance can be calculated by the following:\n$$\nVar(X) = npq\n$$\n\n# Poisson distribution\n\nA Poisson distribution is only valid if four conditions are met:\n- The event must occur randomly.\n- The probability an event will occur in a certain time interval is proportional to the size of the interval.\n- The number of events occurring in a unit of time is independent of the number of events that occur in other units of time.\n- In a very small interval, the probability that two or more events will occur tends to zero.\n\nA distribution that describes the number of times an event will occur randomly in:\n- a given interval of time; or\n- a given space (e.g., area, volume, weight, distance).\n\nThe notation to describe a Poisson distribution is:\n$$\nX \\sim P_O (\\lambda)\n$$\n(where $\\lambda$ is any number more than zero, often the average for the given time)\n\nProvided a Poisson distribution, the probability when $X = a$ is denoted by the following formula:\n$$\nP(X = a) = e^{-\\lambda} \\space \\frac {\\lambda^a} {a!}\n$$\nThe expected value or mean of the distribution is $\\lambda$.\nThe variance of the distribution is $\\lambda$.\n\n## Poisson approximation from binomial distribution\n\nWhen a binomial distribution has a high number of independent trails ($n$) and a low probability ($p$), we can approximate the binomial distribution into a Poisson distribution.\n\nExpressed mathematically, when $n \\to \\infty, \\space p \\to 0$,\n$$\nX \\sim B(n, p) \\approx X \\sim P_O(np)\n$$","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["mathematics"]},"/mathematics/statistics/estimation":{"title":"Estimation","content":"\nThe process of using a sample statistic to estimate the population parameter. The estimator is a statistic used to estimate a parameter, usually denoted with a capped symbol of the parameter; for instance, given parameter $\\mu$, its estimator is denoted as $\\hat\\mu$.\n\n# Terminologies\n\n| Term | Definition |\n|:-:|:-|\n| Estimator | The statistic used to estimate a parameter |\n| Estimate | The numerical value of the estimator |\n| Point estimate | A single and specific estimate of a parameter |\n\n# Unbiased estimators\n\nIf the estimator of parameter $\\theta$ ($\\hat\\theta$) is equal to $\\theta$, $\\hat\\theta$ is an unbiased estimator of $\\theta$. The unbiased estimate of the population mean is the sample mean.\n\n## Unbiased estimator of a population's mean\nThe unbiased estimator of a population's mean is the sample mean. Expressed mathematically:\n$$\n\\hat \\mu = \\bar X = \\frac {\\sum X} n\n$$\nwhere:\n- $X$ are the values in the sample; and\n- $n$ is the sample size.\n\nShould an additional constant $a$ be introduced such that only $\\sum (X - a)$ is available, the unbiased estimator of a population's mean can still be determined:\n$$\n\\hat \\mu = \\frac {\\sum (X - a)} {n} + a\n$$\n\n## Unbiased estimator of a population's variance\nThe unbiased estimator of a population's variance is the sample variance. Expressed mathematically:\n$$\n\\hat {\\sigma^2} = S^2 = \\frac {\\sum (X - \\bar X)^2} {n - 1} = \\frac 1 {n - 1} (\\sum X^2 - \\frac {(\\sum X)^2} {n})\n$$\n\nShould an additional constant $a$ be introduced such that only $\\sum (X - a)$ and $\\sum (X - a)^2$ is available, the unbiased estimator of a population's variance can still be determined:\n$$\n\\hat \\sigma^2 = \\frac 1 {n - 1} (\\sum (X - a)^2 - \\frac {[\\sum ( X - a)]^2} {n})\n$$\n\n# Interval estimates and confidence intervals\n\nIt is not practically possible that a point estimate from a given sample is exactly equal to the population parameter even with accuracy increasing with larger samples. Interval estimates are more frequently used in this case. They refer to a stated range or interval used to estimate a parameter.\n\nWhere interval estimates are valid, the confidence level of an interval estimate is the probability the interval estimate will contain the parameter. Confidence levels usually are 90%, 95%, or 99%.\n\n## Confidence intervals of large samples or populations with variance\nWhere $\\bar X$ is the mean of a sample of size $n$, and either:\n- the population is normal with a known variance $\\sigma^2$; or\n- the population has a known variance $\\sigma^2$ and $n \\geq 30$,\nfor a $100(1 - \\alpha)$% confidence interval for $\\mu$, the formula is:\n$$\n\\bar X \\pm Z_{\\frac \\alpha 2} (\\frac \\sigma {\\sqrt n})\n$$\nIf the variance is not known, the unbiased estimate of the population variance $\\hat \\sigma^2$ can be used in place:\n$$\n\\bar X \\pm Z_{\\frac a 2} (\\frac {\\hat \\sigma} {\\sqrt n})\n$$\n\n## Confidence intervals of small samples or populations with unknown variance\nThe [[mathematics/statistics/continuous-probability-distribution#$t$-distribution|t-distribution]] is employed here. Where $\\bar X$ is the mean of a sample of size $n$, and:\n- the sample size is small ($n \u003c 30$); and\n- the population does not have a known variance $\\sigma^2$,\nfor a $100(1 - \\alpha)$% confidence interval for $\\mu$, the formula is:\n$$\n\\bar X \\pm t(\\frac s {\\sqrt n})\n$$\n\n## Confidence intervals of the population proportion\nWhere $n$ is large ($n \\geq 30$), for a $100(1 - \\alpha)$% confidence interval for $\\mu$, the formula is:\n$$\n\\hat p \\pm Z_{\\frac a 2} (\\sqrt {\\frac {\\hat p \\hat q} n})\n$$\nwhere:\n- $\\hat p$ is the sample proportion;\n- $\\hat q$ is the sample proportion of failures ($\\hat q = 1 - \\hat p$); and\n- $n$ is the sample size.\n\n# Maximum error of the mean\n\nIn the formula for calculating a confidence interval, there is a term that is added and subtracted to find the interval. This term in particular is known as the maximum error of the mean, and is the maximum likely difference between the point estimate of the parameter and the actual value of the parameter.\n\n## Maximum error of the mean for confidence intervals of large samples or populations with variance\nThe maximum error of the mean for this scenario is as follows:\n$$\nZ_{\\frac \\alpha 2} (\\frac \\sigma {\\sqrt n})\n$$\n\n## Maximum error of the mean for confidence intervals of small samples or populations with unknown variance\nThe maximum error of the mean for this scenario is as follows:\n$$\nt (\\frac s {\\sqrt n})\n$$\n\n","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["mathematics"]},"/mathematics/statistics/hypothesis-testing":{"title":"Hypothesis testing","content":"\nRefers to the process involved in accepting or rejecting statements about a population's parameters. These parameters usually are the mean ($\\mu$) or a proportion ($p$).\n\nIn hypothesis testing, there are two hypotheses that are formulated in a particular test:\n- The null hypothesis ($H_0$) is the statement about the parameter formulated for the purpose of testing whether it is to be accepted or rejected.\n- The alternative hypothesis ($H_1$) is the statement that is accepted should the null hypothesis be rejected.\n\n# Errors\n\nIn a hypothesis test, there are two possible errors that can occur:\n- A Type I error rejects the null hypothesis when it is true (i.e., false negative).\n- A Type II error accepts the null hypothesis when it is false (i.e., false positive).\n\nThe probability of committing a Type I error is denoted by $\\alpha$, and that of committing a Type II error is denoted by $\\beta$.\n\nIn hypothesis testing, we only accept a hypothesis if there is no sufficient evidence for us to reject it. Therefore, when a hypothesis is accepted, it does not mean that we believe it is 100% true. We are hence more concerned about Type I errors than Type II errors.\n\n# Steps to hypothesis testing\n\n1. Formulate the null hypothesis $H_0$ and the alternative hypothesis $H_1$ in statistical terms.\n2. Decide whether to use a one-tailed or two-tailed test.\n3. Set a level of significance $\\alpha$.\n4. Find the critical values and determine the rejection region $R$ from the critical values.\n5. Select an appropriate test statistic and calculate the value of the test statistic.\n6. Make the decision; if the test statistic falls in $R$, reject $H_0$, else accept $H_0$.\n\n## Formulating the hypotheses\nWhere a null hypothesis exists such that $H_0 : \\mu = \\mu_0$, there are three possible alternative hypotheses $H_1$:\n- $H_1 : \\mu \\neq \\mu$;\n- $H_1 : \\mu \\gt \\mu$; or\n- $H_1 : \\mu \\lt \\mu$.\n\n## Deciding the tails\nWhere a null hypothesis exists such that $H_0 : \\mu = \\mu_0$, if the alternative hypothesis $H_1$ is:\n- $H_1 : \\mu \\neq \\mu$, then the test is two-tailed;\n- $H_1 : \\mu \\gt \\mu$ then the test is one-tailed; or\n- $H_1 : \\mu \\lt \\mu$, then the test is one-tailed.\n\n## Setting the level of significance\nThe level of significance is usually denoted by $\\alpha$%. The level of significance is also the probability of wrongly rejecting $H_0$ when $H_0$ is true (i.e., a false negative or a Type I error). Commonly-used values of the significance levels are 1%, 5%, and 10%.\n\n## Obtaining the critical values and rejection region\nThe critical value is the value arrived based on the level of significance decided. It divides the region of rejection and region of acceptance.\n\nIn a two-tailed test, the rejection region refers to the values below the negative and above the significance level.\n\n![[images/two-tailed-rejection-region.png]]\nIn a one-tailed test where $H_1: \\mu \u003c \\mu_0$, the rejection region is the values below the negative of the significance level.\n![[images/one-tailed-lt-rejection-region.png]]\nIn a one-tailed test where $H_1 : \\mu \u003e \\mu_0$, the rejection region is the values above the significance level.\n![[images/one-tailed-gt-rejection-region.png]]\n\nThe critical values can be determined based on the significance level. Depending on whether the sample size is large ($n \\geq 30$) or small ($n \u003c 30$), we can refer to the $z$-distribution and $t$-distribution table respectively.\n\n## Calculating the test statistic\nThe test statistic is a value computed from the sample data used to decide whether to accept or reject the null hypothesis. The formula for calculating the test statistic is as such:\n$$\nz = \\frac {\\bar X - \\mu} {\\frac \\sigma {\\sqrt n}}\n$$\n\nIf the population's standard deviation $\\sigma$ is unknown, it can be estimated with the sample standard deviation $\\hat \\sigma = s$:\n$$\nz = \\frac {\\bar X - \\mu} {\\frac s {\\sqrt n}}\n$$\n\n## Making a decision\nDepending on whether the test static falls in the rejection or acceptance region, difference statements can be said.\n\n### $z$ falls in the rejection region\nWhen the test statistic falls in the rejection region, the test is said to be statistically significant and means that there is a significant difference between the sample statistic and the hypothesised population parameter.\n\nA conclusion can therefore be made, stating such:\n\u003e Since the test statistic $z$ falls in the rejection region, there is sufficient evidence at the $\\alpha$% significance level to reject $H_0$. Therefore, we can accept $H_1$.\n\n### $z$ falls in the acceptance region\nWhen the test statistic falls in the acceptance region, there is insufficient evidence to reject $H_0$, meaning that the test is statistically non-significant.\n\nA conclusion can therefore be made, stating such:\n\u003e Since the test statistic $z$ does not fall in the rejection region there is no sufficient evidence at the $\\alpha$% significance level to reject $H_0$. Therefore we accept $H_0$.\n\n# $p$-value\n\nThe $p$-value is the probability of getting a test statistic value as extreme as the value actually obtained minimally. If the $p$-value is smaller than the significance level, the null hypothesis is rejected; otherwise, it is accepted.\n\nThe $p$-value is the probability of the rejection region. Therefore, to obtain the $p$-value:\n\nIf $H_1 : \\mu \\neq \\mu_0$,\n$$\np = 2 \\times (1 - \\phi(z))\n$$\n\nIf $H_1: \\mu \u003c \\mu_0$ or $H_1 : \\mu \u003e \\mu_0$,\n$$\np = 1 - \\phi(z)\n$$\n","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["mathematics"]},"/mathematics/statistics/number-systems":{"title":"Number systems","content":"\nA system of writing to express numbers. There are many number systems; among the most popular used in academics include:\n- binary;\n- decimal; and\n- hexadecimal.\n\n| Number system | Description |\n|:-:|:-|\n| Binary | A number system with a base of 2 (values either 0 or 1); each place in binary is therefore a power of two |\n| Decimal/Denary | A number system with a base of 10 (values between 0 and 9); each place in decimal is therefore a power of 10 |\n| Hexadecimal | A number system with a base of 16 (values between 0 and F); each place in hexadecimal is therefore a power of 16 |\n","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["mathematics"]},"/mathematics/statistics/probability":{"title":"Probability","content":"\nA branch of mathematics that examines the possibility of an event to happen. Events are assigned values between 0 (impossible) to 1 (always); many events in real life range in this spectrum.\n\nThe probability of a particular event, $E$, can be calculated through the following formula:\n$$\nP(E) = \\frac {n(E)} {n(S)}\n$$\nwhere:\n- $n(E)$ is the number of outcomes of in $E$; and\n- $n(S)$ is the number of outcomes in the sample space (i.e., the total number of outcomes).\n\n## Using combinations\n\nIn the case where order does not matter, the probability of an event can be calculated using [[mathematics/combination|combinations]. For example, given a question as such:\n\n\u003e There were 9 pens in a box. 2 were black, 3 were red and 4 were blue. If 3 pens were randomly selected, what is the probability that we would get: 1 black pen and 2 red pens?\n\nThe probability can be calculated using combinations as such:\n$$\nP(E) = \\frac {^2C1 \\times ^3C_2} {^9C_3}\n$$\n($^2C_1$ is the probability of getting a black marker and $^3C_2$ is that of getting a 2 red pens. $^9C_3$ is the probability of getting three markers, regardless of colour.)\n\n# Computing probability\n\nGiven two events, Event A and Event B:\n- the probability of **either** (or) event occuring is found by their sum: $P(A \\cup B) = P(A) + P(B)$ \n- the probability of **both** (and) events occuring is found by their product: $P(A \\cap B) = P(A) \\times P(B)$\n\n# Rules\n\nFor the probability of an event to be valid, there are some rules that it should adhere to. The following lists out the rules of probability:\n\n- $0 \\leq P(A) \\leq 1$ for an event A — in other words, probability must be bound between 0 and 1.\n- $\\sum P(A) = 1$ for an event A — in other words, the sum of probability of all outcomes must sum up to 1.\n- $P(A') = 1 - P(A)$ for an event A — in other words, the probability of an event not happening is the different between it and 1.\n\nThere are also rules if certain conditions are met. There are two notable ones, namely:\n\n- [the rule of multiplication of choices](#multiplication-of-choices); and\n- [the rule of addition of choices](#addition-of-choices).\n\n## Multiplication of choices\n\nProvided:\n- a procedure with $k$ stages; or\n- a situation with $k$ factors,\nthe total number of total different ways the procedure can occur is\n$$\nn_1 \\times n_2 \\times ... \\times n_k\n$$\nwhere:\n- $n$ is the number of ways in a stage.\n\n## Addition of choices\n\nProvided:\n- Procedure A, having $m$ ways of doing; and\n- Procedure B, having $n$ ways of doing,\nthe total number of total different ways the procedure can occur is\n$$\nm + n\n$$\n\n# Conditional probability\n\nConditional probability refers to the probability of an event occuring given that another has already occurred. It is a multi-layered form of probability, if you will. Conditional probability is denoted as $P(E | F)$ and read as \"the conditional probability of E, given F\".\n\nTo calculate conditional probability, the following formula is used:\n$$\nP(A|B) = \\frac {P(A \\cap B)} {P(B)}\n$$\nIf the events are independent, then:\n$$\nP(A|B) = P(A)\n$$\n$$\nP(B|A) = P(B)\n$$","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["mathematics"]},"/mathematics/statistics/regression":{"title":"Regression","content":"\nA process to analyse two sets of data and work backwards (hence the name) to deduce the relationship between the two sets of data. Should a relationship be found between the two sets, prediction of the value of one set of data given the value of the other can be made.\n\nOften used in statistics as it helps to detect trends that are crucial in real life as they can lead to better decisions in planning; for example, in natural disaster proactiveness and weather forecasts, regression can serve to predict occurrences before they happen.\n\n# Important notes\n\n- Predictions should be viewed as only approximations rather than accurate calculations.\n- Predictions should not be extended beyond the range of data values given as input data, as it remains inconclusive whether the relationship will maintain for all values of both data sets.\n\n# Type of relationship\n\nRegressions can be broadly classified according to the type of relationship the two sets of data have. In particular, a relationship can be:\n- linear, and therefore expressable in the form $y = ax + b$ where $a$ and $b$ are constants; or\n- non-linear, and often in the form of a curve.\n\n# Methods of regression\n\nBased on the type of the relationship, there are different methods available to perform regression.\n\n## Linear relationships\nThere are two notable methods to perform regression on sets of data with a linear relationship. These methods are:\n- line-fitting by eye; and\n- calculating the least squares.\n\nIf an equation is given by $y$ in terms of $x$ (i.e., $y = ax + b$), the line fit is known as the regression line of $y$ on $x$. Inversely (i.e., $x  = ay + b$), it is called the regression line of $x$ on $y$\n\n### Line-fitting by eye\nGiven two sets of data, we can attempt to analyse the relationship between them by plotting a graph using the given data. If points on the scatter diagram appear to lie close to a straight line, a regression line can be formed.\n\nThis method of regression is very subjective however as each individual plotting the regression line may not have the exact same line. Line-fitting by eye should only be used as a very rough estimation of the relationship between two sets of data.\n\n### Least squares\nInvoles the construction of a regression line that fits the plotted points in a way that the total deviation between the line and the points is the least.\n\nFor any two sets of data with a relationship of $y = ax + b$, the method of least squares defines several formulae that can be employed and calculated. Combined:\n$$\na = \\frac {s_{xy}} {s_{xx}} =  \\frac {\\sum xy - \\frac {(\\sum x)(\\sum y)} {n}} {\\sum x^2 - \\frac {(\\sum x)^2} {n}}\n$$\n$$\nb = \\bar y - a \\bar x = \\frac {\\sum y} n - a(\\frac {\\sum x} n)\n$$\n\nBreaking down each formula that this method defines:\n$$\n\\bar x = \\frac {\\sum X} n\n$$\n$$\n\\bar y = \\frac {\\sum y} n\n$$\n$$\nS_{xx} = \\sum x^2 - \\frac {(\\sum x)^2} n\n$$\n$$\ns_{yy} = \\sum y^2 - \\frac {(\\sum y)^2} n\n$$\n$$\ns_{xy} = \\sum xy - \\frac {(\\sum x)(\\sum y)} {n}\n$$\n\n# Correlation\n\nCorrelation does not mean causation; regression lines does not necessarily mean that there must be a relationship between the two data sets. There are generally four possible kinds of correlations:\n\t- positive correlations;\n\t- negative correlations;\n\t- no correlations; and\n\t- non-linear correlations.\n\n## Correlation coefficient\nMeasures the strength of the linear relationship between two sets of data. Also known as the linear product moment correlation coefficient and the coefficient of correlation. A computed value that gives a clue of the type of linear correlation two data sets have.\n\nRanges from -1 to 1, with more positive values indicating a strong positive linear relationship and the opposite a strong negative linear relationship. Should there be no linear relationship, the value of $r$ will be almost 0.\n\nThe correlation coefficient $r$ can be calculated using the following formula:\n$$\nr = \\frac {s_{xy}} {\\sqrt {s_{xx} \\times y_{yy}}}\n$$","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["mathematics","statistics"]},"/mathematics/statistics/sampling":{"title":"Sampling","content":"\nRefers to the process of extracting a subset of a population. Done either due to constraints around:\n- time consumption;\n- cost;\n- feasibility; or\n- impossibility.\n\nStatistics are often used to infer population parameters.\n\n# Terminologies\n\n| Term | Definition |\n|:-:|:-|\n| Population | An entire group of entites of which data can be collected from |\n| Sample | A subset of a population; a smaller group of entities selected from the population |\n| Parameter | A numerical measurement collected from a population |\n| Statistic | A numerical measurement computed from a sample |\n\n# Notations\n\n| Representation | Parameter symbol (population) | Statistic symbol (sample) |\n|:-|:-:|:-:|\n| Size | $N$ | $n$ |\n| Mean | $\\mu$ | $\\bar X$ |\n| Standard deviation | $\\sigma$ | $s$ |\n| Variance | $\\sigma^2$ | $s^2$ |\n\n# Sampling methods\n\n## Random sampling\nA technique whereby a sample is selected from a population entirely by chance (randomly). Each entity in the population has a known probability of being selected. Reduces the possibility of bias in sampling.\n\nThere are three kinds of random sampling:\n- simple random sampling;\n- statified random sampling; and\n- systematic random sampling.\n\n### Simple random sampling\nA random sampling method that ensures that each entity in the population has an equal chance of being included in the sample.\n\n### Stratified random sampling\nA random sampling method that selects a sample from different groups in the population, ensuring that a particular group in the population won't be missed out.\n\n### Systematic random sampling\nA random sampling method such that a starting point and every $k$-th entity in the population is selected. Is easy to implement and reasonably efficient, but bias may exist if there is a certain pattern in the population list.\n\n## Quota sampling\nA technique commonly used in marketing research where interviewers are given a quota of interviewees from a certain type to conduct an interview with. Not random in nature as not every entity in the population has a chance to be selected.\n\nThere may also be additional bias as interviewers may approach more approchable and helpful interviewees than interviewees of a diverse background.\n\n# Sampling distribution\n\nRefers to the probability distribution of a statistic. More of a theoretical concept than one observed from experiment. As statistics are random variables, each statistic follows a particular distribution.\n\n## Sampling distribution of the sample mean\nRefers to the probability distribution of all possible values the sample mean can take when a sample (of size $n$) is taken from a particular population. Is a [[mathematics/statistics/continuous-probability-distribution|continuous probability distribution]] by nature.\n\nAn important statistic is the sample's mean ($\\bar X$), meaning that we often concern ourselves with the sample distribution of the sample mean.\n\n### Mean and variance\nWhen a very large number of samples (each of size $n$) of either:\n- an infinite population,\n- a very large finite population, or\n- a finite population with replacement\n\nis repeatedly and independently drawn from a population,\n- the average sample mean ($E(\\bar X)$) will be approximately equal to the actual population mean ($\\mu$); and\n- the variance of the sample mean ($Var(\\bar X)$) will only be $\\frac 1 n$ times the population's variance ($\\sigma^2$).\n\nExpressed mathematically, when $n \\to \\infty$,\n$$\nE(\\bar X) \\approx \\mu\n$$\n$$\nVar(\\bar X) = \\frac {1} {n} \\times \\sigma^2 = \\frac {\\sigma^2} {n}\n$$\n\nOn the other hand, if $n$ is done on a finite population (of size $N$) and $n$ is not a very small fraction of $N$, the finite population correction factor needs to be applied to the variance:\n$$\nVar(\\bar X) = \\frac {\\sigma^2} n \\times \\frac {N - n} {N - 1}\n$$\n\n### Sampling error\nSampling errors are defined as the differences between statistics and parameters as samples are not a perfect representation of a population that will always be present. The sampling error of the mean is the standard deviation of the sampling distribution of the mean.\n\nWhen a very large number of samples (each of size $n$) of either:\n- an infinite population,\n- a very large finite population, or\n- a finite population with replacement\n\nis repeatedly and independently drawn from a population, the standard error of the mean is as such:\n$$\nSE_{mean} = \\sqrt {Var(\\bar X)} = \\frac \\sigma {\\sqrt n}\n$$\nOn the other hand, if $n$ is done on a finite population (of size $N$) and $n$ is not a very small fraction of $N$, the finite population correction factor needs to be applied:\n$$\nSE_{mean} = \\sqrt {Var(\\bar X)} = \\frac \\sigma {\\sqrt n} \\times \\sqrt \\frac {N - n} {N - 1}\n$$\n### Central limit theorem\nIf $X_1, X_2, ..., X_n$ is a random sample (of size $n \\geq 30$) taken from a population where with a random variable X (of any kind of distribution) with a mean ($\\mu$) and variance ($\\sigma^2$), the sample mean ($\\bar X$) is approximately normal.\n\nExpressed mathematically, when $n \\geq 30$,\n$$\n\\bar X \\sim N(\\mu, \\frac {\\sigma^2} n)\n$$","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["mathematics"]},"/productivity/design-thinking":{"title":"Design thinking","content":"\nA thinking process to help with generating and executing an solution for problems. Often utilises [[social/human-centred-design|human-centred design]] to come up with humane and usable solutions. Has five distinct steps to the process:\n\n1. [[social/empathy|Empathise|]]\n\t- Aims to understand the experiences, actions, and feelings experienced by people (e.g., the target audience)\n\t- Conducting interviews to get a sense of what people (e.g., the target audience) care about\n\t- Understand current problems derived from experiences shared during the interviews\n\t- In the design thinking context, explained as \"a deep understanding of the problems and realities of the people you are designing for\"\n2. Define\n3. Ideate\n4. Prototype\n5. Test\n\n## Empathy\nAt this stage, asking questions and interviewing the right audinece is crucial to understanding the issues a group of people face. Through interviews and asking good questions, we can think of pain points or smile points that a person is experiencing; we can then use these points to identify opportunities that we can add on.\n\nIdentifying opportunities is important, as it provides a basis that we can use to think of opportunity statements (i.e., sentences that prompt for idea generation using the structure \"how might we...?\").\n- Opportunity statements tend to have the structure of \"how might we \u003cproblem with user\u003e so as to \u003cimpact\u003e?\"\n\t- Must the target audience clearly in the definition\n\n# Target audiences\n\nIt is important to define target audiences when coming up with ideas using design thinking as it helps us built a solution around the audience rather than building the audience around the solution. It is important to identify the relevant stakeholders or audience for a problem you are empathising for.\n\nIn many cases, these audiences may differ in terms of:\n\n- having different roles (e.g., customers, staff, managers);\n- age ranges with different needs (e.g., youth, adults, elderly);\n- interests; and\n- experience.\n\n# Interacting with the target audience\n\nWhen you have the opportunity to interact with the target audience, it's best that you make the most out of it. Interacting involves getting to know the pain points that the target audience faces, and understanding their experience. You aren't there to judge how they are, but rather to understand why they do what they do. Some tips to interact with your target audience:\n\n- define your audience;\n- spend quality time observing the audience *in context*;\n- ask good questions (e.g., open-ended questions, the 'what-how-why' approach); and\n- observe with a beginner's mindset.","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["productivity"]},"/productivity/note-taking-strategies":{"title":"Note-taking strategies","content":"\n## Discerning what's important\n(Notes from [this video](https://www.youtube.com/watch?v=MYJsGksojms))\n- Understand the difference between **conceptual notes** and **sequential notes**\n    - Conceptual notes: atomic and specific notes that extend what you know\n    - Sequential notes: taken in order of presentation (e.g., in class, as a lecturer is teaching)\n- Try to prioritise conceptual notes over sequential notes, since the latter combines your knowledge (both old and new) into one without decaying the older ones\n    - Old notes provide a framework or foundation for making learning new content easier\n- Questions can come up in real-time instead of after class when analysing sequential notes\n- It's too much work to go back and rewrite whatever content the lecturer has gone through; that's likely why we focus on writing sequentially\n\n[[technology/obsidian|Obsidian]]-specific tips\n- Try not to make a note for the concepts you already know; it's already in your primary database (your mind!)\n- Don't treat this as a big project management project; it is not\n- You're not here to hoard data, you're here to organise your thoughts\n- Try to impose as little structure to your notes","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["productivity"]},"/productivity/personal-knowledge-management":{"title":"Personal knowledge management","content":"\nThe process of consolidating and collecting information that can be used to gather, classify, store, search, retrieve, and share knowledge in daily activities\n\n## Methods of PKM\n- Data hoarding — collecting as much information as possible and storing it in a way that can be used in the future; inefficient, as it is time-consuming to come up with data that is unnecessary\n- Zettelkasten method — accumulating 'knowledge clusters' and curating topics according to curiosity\n\n## Common PKM software of today\n- Notion — block-based software that is heavily customisable and flexible; used by many people for different reasons\n- Obsidian — Markdown-based software that aims to identify and strengthen links between ideas","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["productivity"]},"/social/empathy":{"title":"Empathy","content":"\nThe ability to see the world through other people's eyes; to step into the shoes of other people and comprehend what they see, feel, and experience. Involves putting aside personal preconceived ideas and choosing to understand the ideas, thoughts, and needs of others instead.\n\nEmpathy involves understanding different perspectives from different target audiences (users). Users may differ through:\n- the roles they play (profiles);\n- different age groups with needs; and\n- different interests.\n\n\n##### Why is empathy important to me?\n\nIn a world where people are unfortunately forced to be self-centred in some capacity, it's important to remember to look out for the people around us. Empathy allows us to connect with one another in a non-superficial and extensive way; instead of just noting the presence of someone, we can share about how they feel, experience, and comprehend life in ways that may be different than us. We get to understand what it's like to be human from another human.\n\nI think empathy requires a little bit of selfllessness in the sense that we need to actively attempt to step out of our lives — the priviliges we have, the ideas that we've had been raised with, and assumptions we have — before we can fully understand someone. There's something poetic to me about genuinely empathising with someone because you care for them.\n","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["social"]},"/social/human-centred-design":{"title":"Human-centred design","content":"\nA creative approach that aims to factor in people at the centre of the development process. Allows designers and builders to create solutions that resonates with and tailors to a target audience's needs.","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["social"]},"/social/learning-in-public":{"title":"Learning in public","content":"\nAn extension of [[building in public]], where the individual opens up their learning process for the public to view.[^1]\n\n# Why do I want to learn in public?\n\nI think that learning in public has been something eye-catching for me for one particular reason: transparency. There's something I find comfortable when interacting with people I know are transparent enough to show the ups and downs of their daily lives. As a student myself, I think that one way I can reflect that transparency is to showcase what I've been learning for everyone to see.\n\nThere's definitely an added pressure in that I must be careful of what I expose, and I might also be bound to public scrutiny if I get things wrong. In the long run, though, I think that it's an interesting personal experiment to see what happens. Things are still slow at the moment (as of writing in October 2022), but I wonder where this might go in the future?\n\n[^1] [Why You Should Learn In Public](https://medium.com/my-learning-journal/why-you-should-learn-in-public-4fd3a6239549)","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["social"]},"/social/peer-helping":{"title":"Peer helping","content":"\nA variety of interpersonal helping behaviours assumed by trained individuals who undertake a helping role with others. Based on the basis that many individuals (especially students) are likely to first turn to their peers for help before approaching a trusted adult. [[Ethics]] and boundaries play an important role in peer helping to protect both the helper and the helpee.\n","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["social"]},"/social/perception-of-self":{"title":"Perception of self","content":"\nPerceived as the subjective awareness of one's identity of experience.\n\n## What does the self consist of?\nGenerally, the perception of self consists of four things:\n- future self;\n- self needs;\n- self-identity; and\n- personal values and beliefs","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["social"]},"/tags/mathematics/":{"title":"Mathematics","content":"","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":[]},"/tags/productivity/":{"title":"Productivity","content":"","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":[]},"/tags/social/":{"title":"Social","content":"","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":[]},"/tags/technology/":{"title":"Technology","content":"","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":[]},"/technology/cloud/cloud-computing":{"title":"Cloud computing","content":"\nThe delivery of services over the internet. Also defined as a model for enabling ubiquitous, convenient, on-demand network access to a shared pool of configurable computing resources that can be rapidly provisioned and released with minimal management effort or service provider interaction. Usually includes several common infrastructure used in information technology, including but not limited to:\n- virtual machines;\n- storage;\n- database; and\n- other resources.\n\n# Terminologies\n\n| Term | Definition |\n|:-:|:-|\n| Availability | Accessible when needed |\n| Tolerance | Ability to withstand a certain amount of failure and remain functional |\n| Scalability | Ability to easily grow in size, capacity, or scope when required, usually based on demand |\n| Elasticity | Ability to scale when required and to reduce when resources are no longer required |\n\n# Characteristics\n\nCloud computing has several notable characteristics compared to on-premises computing, including:\n- on-demand usage (self-service on demand);\n- ubiquitous access (broad network access);\n- multitenancy (resource pooling);\n- elasticity (rapid expansion);\n- measured usage; and\n- resiliency.\n\n# Models\n\n## Cloud computing models\nThere are three cloud computing models often adopted:\n\n- infrastructure-as-a-service (IaaS): users manage servers, operating systems,and network infrastructure;\n- platform-as-a-service (PaaS): users create and run applications; the infrastructure is managed by the cloud provider;\n- software-as-a-service (SaaS): users only run the applications; the application is managed by the cloud provider\n\n## Cloud deployment models\nThere are also three cloud deployment models often adopted:\n\n- all-in-cloud: applications are fully deployed in the cloud, and all parts of the applications run in the cloud;\n- hybrid: an organisation's infrastructure into the cloud is extended while also connected to an internal system;\n- private cloud: appplications are run in a cloud infrastructure from an organisation's own data centre.\n\n# Benefits\n\n- Cloud computing allows for less capital expenses (expenses ) and more operational expenses.\n- Cloud computing allows companies to enjoy massive economies of scale.\n- Cloud computing allows accurate capacity planning.\n- Cloud computing increases speed and agility.\n- Cloud computing focuses IT resources to meeting business needs.\n- Cloud computing allows for the deployment of IT resources globally.","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["technology","cloud"]},"/technology/cloud/cloud-economics":{"title":"Cloud economics","content":"\nThe cloud introduces new business models and economics as companies shift their expenditure, spending less money on setting up (e.g., servers) and more money on operations instead.\n\nCompanies are saving costs by:\n- reducing staff and equipment cost (as staff is not needed to maintain physical data centres and equipment + maintenance is not needed); and\n- leveraging pay-on-demand cost models for the right-size capacity (where resources can be increased to meet peak demands and reduced to meet low demand; paying for only what you use when you use).\n\n# Types of expenses\n\nThere are generally two types of expenses used within cloud economics:\n- capital expenses (CAPEX): the one-time funds used by a company to acquire, and upgrade physical resources; and\n- operational expenses (OPEX): the ongoing funds used by a company to keep running the business.\n\nCapital expenses are used to set up private clouds, and they are generally high in cost initially and hard to change once purchased. It also takes a long time to deploy.\n\nOperational expenses are more pay-as-you-go, making it easy to deploy new requirements quickly and to adapt to new applications.\n\nThe total cost of ownership is the sum of capital and operational expenses; expressed mathematically:\n\n$$\nTCO = CAPEX + OPEX\n$$\nwhere:\n- $TCO$ is the total cost of ownership;\n- $CAPEX$ is the total capital expense; and\n- $OPEX$ is the total operational expense.\n","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["cloud","technology"]},"/technology/computers/basic-input-output-system":{"title":"Basic input/output system","content":"\nA computer program, firmware, or microprocessor of a computer that is used to start the computer when powered on. Commonly abbreviated as BIOS. Stored in the non-volatile random access memory (NVRAM) of a computer, usually a complementary metal semiconductor (CMOS). The BIOS includes low-level code that:\n\n- initiates and enable communications with hardware devices;\n- performs the [[technology/computers/power-on-self-test|power-on self test (POST)]] to test the computers components (including the CPU, memory, storage, and input devices); and\n- loads an operating system that interfaces with the user.","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["technology","computers"]},"/technology/computers/central-processing-unit":{"title":"Central processing unit","content":"\nA component that processes data according to a set of instructions. Often abbreviated as CPU. Clock speeds are measured in gigahertz (GHz); the faster the clock speed, the faster the performance. Has four distinguishable units within the CPU:\n\n- [arithmetic logic unit](#arithmetic-logic-unit) — processes data by performing basic mathematical and logical operations;\n- [control unit](#control-unit) — follows instructions and decides when data should be stored, received, or transmitted by different parts of the computer; and\n- registers — small and temporary storage used by the processor to temporarily store data; and\n- cache — stores copies of data from frequently-used main memory locations.\n\nModern CPUs are often faster because of having more packed within them. A core has two logical processors within them; modern CPUs tend to have eight cores (therefore 16 logical processors).","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["technology","computers"]},"/technology/computers/computer":{"title":"Computer","content":"\nAn electronic device that operates under the control of **instructions stored in memory** that can **accept data** and **process them** according to a set of instructions before producing results and storing them for future use.\n\n# Components\n\nGenerally, computers have several components that play different roles within the computer:\n\n- [[technology/computers/central-processing-unit|central processing unit]] (CPU) — a component that processes data according to a set of instructions;\n- memory — data, instructions, and results to be used in the short-term;\n\t- [[technology/computers/random-access-memory|random access memory]] (RAM) — a component that stores data, instructions, and results for immediate use;\n\t- read-only memory (ROM) — a component that stores data and instructions that rarely need to change or are required for start-up;\n- input devices — a hardware device that allows users to enter data and instructions into a computer;\n- output devices — a hardware device that is used to show processed results from a computer in a  human-friendly way (i.e., can be understood by people); and\n- (secondary) storage — a device that stores data, instructions, and information (often in large amounts) that will not be lost on power supply interruption\n","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["technology","computers"]},"/technology/computers/computer-architecture":{"title":"Computer architecture","content":"\nDescribes how a [[technology/computers/computer|computer]] is designed and built to function, including how parts of the computer are designed, organised, and connected.\n\n# von Neumann computer architecture\n\nThere may be many kinds of computer architecture, but a popular one (that is used in current studies) is the von Neumann computer architecture. The architecture describes a computer with the following components:\n\n- a [[technology/computers/central-processing-unit|central processing unit]] with both an arithmetic logic unit and registers;\n\t- control units that include an instruction register and program counter;\n- memory to store data and instructions;\n- external secondary storage; and\n- input and output mechanisms.\n\nGenerally, the architecture also defines the use of buses (collections of wires used as a medium to transport data from one part of a computer to another). There are three buses that are used in this architecture:\n\n- Data bus: A bidirectional (two-way) bus that is mainly used to transport data between the memory, I/O devices, and processor\n- Address bus: A unidirectional (one-way) bus that is mainly used to transport address information usually from the processor to memory\n- Control bus: A bidirectional (two-way) bus that is mainly used to transport control signals and clock pulses","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["technology","computers"]},"/technology/computers/device-management":{"title":"Device management","content":"\nDevices connected to a computer are managed by connections to the processor. There are two parts to device management, particularly the hardware aspect ([device controller](#device-controller)) and software aspect ([device driver](#device-driver)).\n\n# Device controller\n\nA system that handles the incoming and outgoing signals of the CPU. Connected to the computer via a plug and socket, of which the socket is connected to the controller. Controllers come in embedded and external forms.\n\nSome devices may have device controllers built within them. Common devices with such include external storages and speakers.\n\n# Device driver\n\nA program that controls a particular type of device attached to a computer. Translates computer code to instructions the device can comprehend.\n","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["technology","computers"]},"/technology/computers/extensible-file-allocation-table":{"title":"Extensible File Allocation Table","content":"\nA file system developed by Microsoft optimised for flash memory (e.g., USB flash drives and SD cards). Often used when [[technology/computers/new-technology-file-system|NTFS]] is unavailable but the size limit of [[technology/computers/file-allocation-table|FAT]] is too small. By far the most cross-platform-compatible file system, with support in Linux, Windows, and macOS.\n","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["technology","computers"]},"/technology/computers/file-allocation-table":{"title":"File Allocation Table","content":"\nA file system used in legacy Windows operating systems. Has multiple versions, including 12, 16, and 32-bit variation (FAT12, FAT16, and FAT32 respectively). FAT32 supports a maximum of 4 GiB of storage. Has three main components, including the:\n- volume boot record (VBR);\n- directory entries; and the\n- file allocation table.\n\nIn a FAT file system, there are usually two file allocation tables for redundancy.\n\n# Process\n\n1. A file is called by the file name and path.\n2. The storage path leads to the location of the parent directory, of which the directory entry of the file is location.\n3. The OS refers to the parent directory and reads the directory entry.\n4. The directory entry provides the starting cluster and size of the file.\n5. The OS goes to the starting cluster and begins reading the data.\n6. Only the data within the cluster up to the size of the file is read; should the file size surpass one cluster, the FAT is needed to link a file's clusters together.\n","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["technology","computers"]},"/technology/computers/file-management":{"title":"File management","content":"\n# Terminologies\n\n| Term | Definition |\n|:-:|:-|\n| File system | A structure for filling data |\n| File | A set of data grouped in some logical manner, assigned a name, and stored on the disk |\n| Cluster | The smallest allocation unit of a disk (e.g., 4096 bytes for NTFS); read and write operation consumes a space of at least one cluster |\n\n# File system\n\nA structure for filling data. Utilised by operating systems to store and access information on a computer. The file system manages, stores, and retrieves information and allocates locations on the storage and keeps a record of where specific information is kept.\n\nSome examples of commonly-used file systems:\n- [[technology/computers/file-allocation-table|File Allocation Table]] (FAT), used in legacy Windows computers;\n\t- FAT32, a version of FAT designed by Microsoft;\n- [[technology/computers/extensible-file-allocation-table|Extensible File Allocation Table]] (exFAT), used in modern windows computers;\n- [[technology/computers/new-technology-file-system|New Technology File System]] (NTFS), used in modern Windows computers;\n- Hierarchical File System (HFS), used in legacy Apple computers; and\n- Apple File System (APFS), used in modern Apple computers.\n\nA file system consists of folders and files. Folders can be organised in a hierarchy that is similar to a tree structure. Operating system files should be and usually are kept separate to ensure that important files are not deleted by users.\n\n# Pathnames\n\nPathnames are used to locate and identify specific files within a file system. There are two kinds of pathnames:\n- absolute pathnames; and\n- relative pathnames.\n\nFor the following two examples, consider the following structure:\n\n```\n                  root\n                    │\n        ┌───────────┼────────────┐\n        ╵           ╵            ╵\n    personal      group       family\n\n   readme.txt   report.docx   Jan10.png\n      tasks      fsp.java     May10.jpg\n```\n\n## Absolute pathnames\nUsed to identify the path to a file from the root directory (`/` in Linux-like terminals and `\\` in Windows, usually `C:`).\n\nTo target `May10.jpg` from `personal`, using absolute pathnames, the path will be:\n```\nroot/family/May10.jpg\n```\n\n## Relative pathnames\nUsed to identify the path to a file from the current directory.\n\nTo target `May10.jpg` from `personal`, using relative pathnames, the path will be:\n```\n../family/May10.jpg\n```\n(To navigate to `May10.jpg`, you need to go up one directory (`../`) then into the `family` directory to access the file.)\n\n# Files\n\nA set of data grouped in some logical manner, assigned a name, and stored on the disk. The file system records where the file is located on the disk for retrieval later. Data in files must be converted into a digital format (binary) that the computer can understand.\n\nBesides the content of the file, some metadata is also stored alongside in the file:\n- the date and time of:\n\t- the file's creation;\n\t- the file's last modification; and\n\t- the file's last access;\n- the file's size;\n- the file's attributes (e.g., security information, last back up time);\n- the file's compression status; and\n- the file's encryption status.\n\n# Storage types\n\nThere are generally two types of storage used in modern day computers:\n- hard disk drives (HDD); and\n- solid-state drives (SSD).\n\nHard disk drives are spinning hard drives that are commonly used in legacy computers. They are magnetic in nature, meaning that they are more prone to drops and shocks than solid-state drives. Hard disk drives are low-level formatted when delivered from the manufacturer.\n\nSolid state drives are similar to hard disk drives, but are more efficient and performant than hard disk drives. They are generally much more expensive, though.\n\n# Fragmentation and defragmentation\n\n## Fragmentation\n\nThe wastage of disk space within the cluster due to the actual file size being smaller than the allocated space. Also known as slack space (or file slack), which is the space between the end of a file and the end of the cluster it is stored in.\n\n![[images/external-fragmentation.png]]\n\nOccurs when a file is divided into pieces scattered around the disk, and of which is usually caused by frequently creating, deleting, and modifying files. Usually caused by the deletion of small files which leaves small sets of contiguous clusters insufficient enough to be filled by a bigger new file.\n\nFragmentation results in the OS searching the disk for diferent groups of clusters scattered around the disk, degarding system performance of disk operations.\n\nit is important to note that fragmentation only affects hard disk drives; most if not all solid-state drives do not face the issue of fragmentation.\n\nThere are two kinds of fragmentation:\n- external fragmentation is when a process's memory blocks are non-contiguous; and\n- internal fragmentation is when there is the presence of slack space in a a process's memory blocks.\n\n## Defragmentation\nThe process of consolidating fragmented files on a computer's hard disk by physically reorganising the contents of the disk. In Windows, the [Disk Defragmenter](https://support.microsoft.com/en-us/windows/defragment-your-windows-10-pc-048aefac-7f1f-4632-d48a-9700c4ec702a) is a system utility tool that handles the defragmentation of a hard disk drive.\n\n# Partitioning\n\nThe process of splitting a single physical storage into a number of partitions or volumes. In Windows, partitions or volumes may be assigned a drive letter. Each partition must be formatted using a particular file system. In Windows, [Disk Management](https://learn.microsoft.com/en-us/windows-server/storage/disk-management/overview-of-disk-management) is a system utility tool that allows users to preview and partition their storage.\n\n# Formatting\n\nThe process of preparing a chosen partition of the storage to be used by an OS by deleting all the data and setting up a file system.\n\nIn the first sector of the formatted partiton, a boot block is created. The boot block contains the root folder, which contains:\n- file information, including the file's\n\t- name;\n\t- start cluster;\n\t- size; and\n\t- MAC (modification, access, creation) date time information; and\n- file attributes (e.g., hidden, read-only, and archive).\n\n# Authorisation\n\nThe file manager tracks each user's authorisation to access file using file attributes, or codes signifying the ability of every system user to manipulate the file.\n\nAttributes used by Linux (and Linux-like OS terminals including macOS) and Unix include:\n- `d` (directory; a file is indicated with `-`);\n- `r` (read);\n- `w` (write); and\n- `x` (execute).\n\nThe code has the following format; to explain, the following example is used:\n```\ndrwxr-xr-x\n╷─┬╴─┬╴─┬╴\n│ │  │  └╴permissions for world (everyone)\n│ │  └╴permissions for group\n│ └╴permissions for owner\n└╴directory or file indicator (d or -)\n```\nAttributes used by Windows include:\n- `D` (directory);\n- `R` (read-only);\n- `S` (executable);\n- `H` (hidden); and\n- `A` (archived).\n\n# Components\n\n## Boot sector\n\nA section on the storage that includes information on how to start the boot process to load an operating system. There are two types of boot sectors:\n- master boot record (MBR); and\n- volume boot record (VBR).\n\n### Master boot record\n\nThe master boot record is the first sector of a partitioned storage and holds the information (including the file system) on the logical partitions on the storage. There can only be one master boot record in a storage.\n\n### Volume boot record\n\nThe first sector of a partition, used to contain:\n- code initiating the boot process or loading an OS; \n- the file system type; and\n- parameter information, including:\n\t- bytes per sector; and\n\t- sector per cluster.\n\n## Directory entry\n\nA 32-byte reference to every file and folder. Contains metadata and information including the:\n- name of the file/folder;\n- MAC (modification, access, creation) date time information;\n- location (starting cluster);\n- size; and\n- author.","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["technology","computers"]},"/technology/computers/memory-management":{"title":"Memory management","content":"\nRefers to the allocation of resources to each program by the [[technology/computers/operating-system|operating system]]. Heavily involves the [[technology/computers/random-access-memory|random access memory]] as a resource used by programs as a working space.\n\nA memory manager has several tasks in particular:\n- allocating portions of the main memory to various programs at their request;\n- freeing portions of the main memory when no longer needed;\n- keeping track of the status of each location of the main memory; and\n- protecting the memory allocated to a program from unauthorised access by other programs.\n\nThe [[technology/computers/operating-system-kernel|kernel]] is the part of the operating system always in the RAM as long as the computer is turned on.\n\n# Memory address\n\nA location, often in the form of a binary number, located on the memory. It can be referenced to access the content stored in-memory at that particular location. Starts from 0 to a maximum number defined by the amount of RAM in the computer.\n\nTo calculate the range of an address space provided the amount of RAM, given that $b$ is the number of bytes, find the number of bits $n$ by using $\\frac {log(b)} {log(2)}$ and use that to find the maximum value ($\\frac n 4$ `F`s).\n\nThe number of bits an address has is dependent on the [[technology/computers/computer-architecture#von Neumann computer architecture|address bus]]'s width.\n\n# Memory content\n\nA particular address can store **eight bits** (one byte) of information; this information could be either a part of an instruction or data.\n\n# Frames, pages, and page tables\n\nFrames refer to compartments brought about due to the *physical* memory's storage. Pages, on the other hand, are *virtual* and refer to references created by the CPU.\n- The typical size of a frame is **4096 bytes** (4 KiB).\n- The size of a frame **must match** the size of the page.\n- Expressed differently, data or instructions are stored in the memory as frames. When the CPU references and reads or writes the memory, the CPU handles them as pages.\n\n## Page tables\n\nTo bridge the link between frames and pages, memory managers often create a page table for each process. Page tables are data structures used by the memory manager to keep track of which page corresponds to which frame.\n\nPage tables include a valid or invalid control bit which is used to tell whether or not a page is in the physical memory. In the case of demand paging, where data can be stored on the secondary storage temporarily, the control bit will be 0 (demarking it as not in the physical memory).\n\n# Logical and physical memory\n\nThe logical memory is the memory as seen as pages (i.e., seen by the CPU). The logical memory stores pages by the CPU and can be purged at any time.\n\nThe physical memory is the memory stored as-is physically, and is seen as frames.\n\n# Virtual memory and demand paging\n\nMultiple programs may be loaded into the physical memory at once (in [[technology/computers/operating-system#Multi-tasking and multi-user OSs|multi-tasking operating systems]]). The total memory size required by the OS and all the programs may exceed the physical memory size; in this event, the OS uses virtual memory to compensate. This space is known as a swap space; on Linux, this space is a partition called `swap` while on Windows, this space is in a file named `pagefile.sys`.\n- This method makes use of the available space on the secondary storage to store programs.\n- The OS moves inactive data from the physical memory to the temporary space in the secondary storage.\n- The memory manager than swaps data to and fro the storage and memory when required.\n\nTrashing refers to the excessive swapping of pages and data between the memory and secondary storage; this causes the program to operate more slowly.\n\nA computer on low memory may exhibit several signs:\n- running and executing programs slowly;\n- having high thrashing activity;\n- crashing (Blue/Black Screen of Death); and\n- showing warnings about having low memory.\n\nTo resolve low memory, consider:\n- upgrading the computer's RAM; and\n- closing unused applications.\n\n# `resmon`\n\n`resmon`, or Resource Monitor, is a program introduced in Windows Vista allowing users to view realtime information about the resources on their computer (i.e., CPU, memory, disk, and network) and the processes using them. There are several terminologies to note for `resmon`.\n\n| Term | Definition |\n|:-:|:-|\n| Commit | The total amount of physical memory and page file space allocated by Windows |\n| Working set | The amount of physical memory used |\n| Shareable | The amount of physical memory a process is sharing with other processes |\n| Private | The amount of physical memory a process is using alone |","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["technology","computers"]},"/technology/computers/new-technology-file-system":{"title":"New Technology File System","content":"\nA file system used in modern Windows operating systems (starting with Windows NT in 1993). All data are allocateed to files, including the file system itself. Has three main components, including the:\n- partition boot record (PBR), comprising of 16 sectors (opposed to one sector with FAT), of which half is used for data;\n- master file table (MFT), containing every object's name, size, date and time, starting extent, and fragementation on the volume; and\n- $Bitmap.\n","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["technology","computers"]},"/technology/computers/operating-system":{"title":"Operating system","content":"\nA collection of software that manages computer hardware resources and provides common services for application software. Designed to support a [[technology/computers/computer|computer]]'s basic functions. Often provides a [[technologies/graphical-user-interface|graphical user interface]] for the user to interact with the OS.\n\n# Kinds of OSs\n\n## Type of OS\nOften comes as two kinds of operating systems:\n- desktop operating systems — installed on personal computers meant to be used by one person at a time; and\n\t- the Windows and macOS families of operating systems are examples of desktop OSs\n- server operating systems — installed on more powerful computers (servers) connected to a network and sets out rules enabling multiple users to access information.\n\t- the Windows Server family of operating systems are examples of server OSs\n\n## Open-source and closed-source OSs\nOperating systems may also vary in whether they are [[technology/open-source|open source]]; the Linux OS and most distributions based off it are open-source, whereas Windows and macOS are examples of proprietary OSs.\n\n## Multi-tasking and multi-user OSs\nA multi-tasking OS allows more than one program to run at the same time in a computer. Users will be able to:\n- do multiple tasks at the same time;\n- switch between different active applications; and\n- transfer data from one application to another.\n\nA multi-user OS allows multiple users concurrently logging into the computer. The OS will need to handle:\n- fair treatment of users with similar privileges;\n- the issuance of priority to superusers;\n- the privacy of users' files and data sharing storages; and\n- the protection of integrity of each user's programs and data from:\n\t- malicious attempts by others; or\n\t- accidental mistakes from others.\n\nBased on the definitions above:\n| Operating System | Is a multi-user OS? | Is a multi-tasking OS? |\n|:-:|:-:|:-:|\n| Windows | No | **Yes** |\n| Windows Server | **Yes** | **Yes** |\n| macOS | **Yes** | **Yes** |\n| UNIX | **Yes** | **Yes** |\n| Linux | **Yes** | **Yes** |\n\n# How it works\n\nOperating systems work with other components in a computer to fully make use of a computer's resources and function well. These components include:\n- the [[technology/computers/basic-input-output-system|basic input/output system (BIOS)]];\n- the operating system's [[technology/computers/operating-system-kernel|kernel]] and\n- [[technology/computers/device-management|device drivers]].\n\n# Functions\n\nGenerally has four important functions:\n\n- [[technology/computers/file-management|file management]] — the handling of file-related activities (e.g., storage, retrieval, naming, and sharing);\n- [[technology/computers/process-management|process management]] — the handling of the creation and destruction of processes and provision of mechanisms for synchronisation and communication across processes;\n- [[technology/computers/memory-management|memory management]] — the handling of the allocation and deallocation of memory space to programs; and\n- [[technology/computers/device-management|device management]] — the handling of the management of I/O devices.","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["technology","computers"]},"/technology/computers/operating-system-kernel":{"title":"Operating system kernel","content":"\nA collective name applied to core services provided by an operating system that performs functions like process, memory, and device management.","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["technology","computers"]},"/technology/computers/power-on-self-test":{"title":"Power-on self-test","content":"\nA set of routines performed by firmware or software immediately after a computer is powered on. Used to determine if hardware is working as expected. The power-on self test performs the following:\n\n- verification of CPU registers;\n- verification of the BIOS's code integrity;\n- verification of some basic components (direct memory access, timer, and interrupt controller);\n- initialisation, sizing, and verifiation of system main memory;\n- initialisation of BIOS;\n- passing of control to other specialised extension BIOSs; and\n- identification, organisation, and selection of devices available for booting.\n\nThe checks usually test the following components:\n\n- hardware components (e.g., the processor, storage devices, and memory);\n- basic system devices (e.g., keyboard and peripheral devices);\n- CPU registers;\n- direct memory access;\n- timers; and\n- interrupt controllers.\n","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["technology","computers"]},"/technology/computers/process-management":{"title":"Process management","content":"\nThe state of managing active processes running in a computer system. \n\n# Terminologies\n\n| Term | Definition |\n|:-:|:-|\n| Arrival time (AT) | The time a process arrives at the ready queue |\n| Burst time (BT) | The estimated time for the CPU to execute a process |\n| Finish time (FT) | The absolute time a process has finished executing |\n| Turnaround time (TT) | The total time between a process's arrival time and finish time ($TT = FT - AT$) |\n| Waiting time (WT) | The total time a process waits to be executed ($WT = TT - BT$) |\n| Throughput | The number of processses completed per unit time |\n\n# Scheduling schemes\n\nA process scheduler is a component that arranges and queues processes to be executed by a single CPU. Its main roles are to:\n- refer to built-in policies and procedures to decide which processes to run first and which processes to be given the chance to finish first; and\n- be responsible for scheduling the next process in the ready queue to be executed.\n\n## Allocation schemes\n\nDifferent managers will schedule and execute processes in different scheduling schemes that they support. Popular schemes include:\n- first-come first-serve (FCFS);\n- round robin (RR);\n- shortest job next (SJN); and\n- shortest remaining time first (SRTF).\n\n| Scheme | Definition |\n|:-:|:-|\n| First-come first-serve | A scheduling algorithm where tasks are enqueued and the process at the front of the queue is run. |\n| Round robin | A scheduling algorithm similar to first-come first-serve, but rotates across the processes. |\n\nAllocation schemes have a direct impact on the efficiency of the CPU. No single allocation scheme is optimal; each has its own design goals. There are two kinds of allocation schemes:\n- non-preemtive, where a process's execution is not allowed to be interrupted; and\n\t- example: FCFS\n- preemptive, where a process's execution is allowed to be interrupted.\n\t- example: RR\n\n### Benefits and disadvantages\n\n- FCFS\n\t- `[+]` Simple to use\n\t- `[+]` Fair (provided no long processes are present)\n\t- `[-]` Stalling and hogging of the CPU by long processes\n- RR\n\t- `[+]` Fair\n\t- `[+]` Able to incorporate other schemes\n\t- `[-]` Practically equal to FCFS if time quantum is too small\n\t- `[-]` A lot of context switching present when the time quantum is too small\n\n# States\n\nProcesses can exist in four different states:\n\n- ready state;\n\t- processes in this state are ready for execution by the CPU. In this instance, they are placed in a ready queue\n\t- some processes may be returned to the ready state after running or waiting before execution is completed\n- waiting state;\n\t- processes in this state are put on hold, often waiting for some part of the OS to respond to a request by the process\n\t- not a mandatory state\n- running state; and\n\t- processes in this state are being actively executed by the CPU\n\t- processes may move on or back to the finished, ready, or waiting state depending on the context\n- finished state.\n\t- processes in this state have been executed. System resources it was allocated with are released, and the process terminates\n\n# Commands\n\n| Windows | Linux | Description |\n|:-:|:-:|:-|\n| `tasklist` | `ps` | Lists the curerntly running processes in a computer |\n| `taskkill` | `kill` | Stops (kills) a running process, usually the given process |\n","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["technology","computers"]},"/technology/computers/random-access-memory":{"title":"Random access memory","content":"\nA component that stores data and instructions temporarily so that they can be quickly accessed by the [[technology/computers/central-processing-unit|processor]] when needed. Also a resource used by programs as a working space.\n\n\n\n\n\n\n","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["technology","computers"]},"/technology/computers/server":{"title":"Server","content":"\nSpecialised [[technology/computers/computer|computers]] that are performant and designed to be accessed remotely by multiple users (often in the thousands) at once. Have the ability to control hardware, software, and other resources in a network while providing centralised storage for programs, data, and information.\n\nHas several kinds, the common ones being:\n- tower servers;\n- rack servers; and\n- blade servers.\n","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["technology","computers"]},"/technology/data-typing":{"title":"Data typing","content":"\nThe process of assigning a type to a particular variable or value. Often done to:\n\t- dynamically allocate a certain amount of memory (for instance, `double` allocates twice as many bits as `float`); and\n\t- restrict operations (as some operations, like division, can only be done for certain types).\n\nDifferent languages can have different data types, but the common few include:\n\n| Data type | Used for |\n|:-:|:-|\n| integer | Whole numbers |\n| float | Numbers with a floating point decimal |\n| character | Any kind of character |\n| string | A chain of characters |\n| Boolean | True or false values |\n| list/array | A collection of data types |\n\nIn some low-level languages (e.g., the C family of languages), there may be additional data types to handle assigning different amounts of bits (usually 16, 32, and 64 bits). Common types include:\n\n| Data type | Related data type | Bit size | Amount held |\n|:-:|:-:|:-:|:-|\n| byte | integer | 8 | 256 (0–255 unsigned, -128–127 signed) |\n| short | integer | 16 | 65536 (0–65535 unsigned, -32768–32767 signed) |\n| long | integer | 32 | 4294967296 (0—4294967295 unsigned, -2147483648–2147483647 signed) |\n| double | float | 64 | | \n","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["technology"]},"/technology/databases/database-design":{"title":"Database design","content":"\nThe process of coming up with entities and models to be used in a future database. Considered a critical process in the planning and development of a database for use.\n\n# Terminologies\n\n| Term | Definition |\n|:-:|:-|\n| Entity | An object (e.g., people and items) of which is to be captured and modelled into a database |\n| Weak entity | An entity that does not have any key attributes of its own and can only be identified by relating it to an owner entity |\n| Attribute | A property or characteristic of an entity that is of interest to the organisation or business area (that the database is being built for) |\n| Relationship | An association between the instances of one or more entities of interest to the organisation |\n\n\u003e **Example**\n\u003e For a Salesperson entity, the employee number, name, date of birth, gender, and email address are examples of relevant attributes to the person.\n\n# Keys\n\nKeys are used to identify a record in a table. They are unique to each record and there are different kinds of keys:\n\n- Candidate key — an attribute that uniquely identifies a tuple in a relation\n- Primary key — a chosen candidate key used to uniquely identify each tuple. A primary key requires two requirements and two recommendations:\n\t- the value of the primary key should be consistent (unchanged) over time;\n\t- the value of the primary key must be non-null.\n\tAdditionally, consider the following:\n\t- intelligent keys (keys with structures indicating the likes of classifications or locations) should be avoided; and\n\t- surrogate keys should be considered as a possible substitution.\n- Alternate key — a candidate key that was not chosen as the primary key of the record\n- Foreign key — an attribute used to create a relationship with another relation (table) within the database\n- Composite key — a key that consists of more than one attribute\n\t- In some instances, one primary key is not enough (e.g., the ISBN of a book is insufficient as a library may hold multiple copies of the same book)\n- Surrogate key — a new attribute specifically introduced into an entity to serve as the primary key\n\t- Often used when a natural identifier cannot be used to guarantee the uniqueness of each tuple\n\t- When the primary key is a composite key with many attributes, it is suggested to use a surrogate key in its place\n- Partial key — an attribute or set of attributes that uniquely identify weak entities related to the same owner entity\n\n# Models\n\nConceptual database models are used to give a brief overview of what entities a database has and the relationships the entities have with each other. Like flowcharts, shapes resemble different things in the model.\n\nThe [[technology/databases/entity-relationship-model|entity-relationship model (ER model)]] is a commonly used model used to sketch out and visualise the relationships entities have with one another in a database.","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["technology","databases"]},"/technology/databases/databases":{"title":"Databases","content":"\nCan be defined as organised collections of data. Generally more advantageous compared to spreadsheets, given that they have:\n\t- a fast and easy setup;\n\t- more storage;\n\t- has built-in tools to see all data at a glance;\n\t- support for encryption; and\n\t- the ability to faciltiate multiple connections at once.\n\n# Terminologies\n\n| Term | Definition |\n|:-:|:-|\n| Tables | Collections that hold data about a particular subject (e.g., entity, object in warehouse); generally organised into rows (records) and columns (fields) |\n| Record | A row in a table. Typically includes information about one of several counts of a subject (e.g., a person in a persons table) |\n| Field | A column in a table. Typically includes key information about the subject (e.g., the name, email address, and phone number of a person in a persons table) |\n\n# Conventions\n#### Table names\n- Lowercase and not including spaces (underscores instead)\n- Should refer to a collective group or be singular\n\n#### Field names\n- Lowercase and not including spaces (underscores instead)\n- Should be singular, unique, and different from the table name\n\n# [[technology/data-typing|Data typing]]\nSome instances of databases (for example, the [[technology/databases/sql|SQL]] family of databases) tend to use data typing to streamline the developer experience and prevent errors (such as invalid field names provided by the developer). For these cases, view the particular database page.\n\n# Application lifestyle\n\nGenerally has seven stages that needs to be gone through to execute the creation of a database. They include:\n\n1. Database planning — defining the mission statement of the database (what does the database want to solve/store?)\n2. System definition — identifying system boundaries\n3. Analysis — collecting and analysing information (e.g., from the current data available)\n4. Database design — creating a plan/model that uses previous steps to meet the requirements\n\t- Conceptual database design — creating models and entities\n\t- Logical database design — mapping entities to relations\n\t- Physical database design — creating relations between tables\n5. Implementation\n6. Testing\n7. Operational maintenance\n","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["technology"]},"/technology/databases/entity-relationship-model":{"title":"Entity-relationship model","content":"\nA database visualisation model that describes interrelated things of interest in a specific domain of knowledge. Provides a detailed and logical representation of the data in a database.\n\n# Terminologies\n\n| Term | Definition |\n|:-:|:-|\n| Simple/Atomic attribute | An attribute that cannot be further divided into smaller attributes |\n| Composite attribute | An attribute that is made up of multiple components, each with an independent existence |\n| Single-valued attribute | An attribute that holds only a single value for a single entity (e.g., name, gender, ID) |\n| Multi-valued attribute | An attribute that holds multiple values for a single entity (e.g., phone numbers, qualifications) |\n| Derived attribute | An attribute that represents a value derivable from the value of related attributes | \n\n# Symbols\n\n| Symbol | Representation |\n|:-:|:-|\n| Rectangle | Entity (singular) |\n| Concentric rectangle | Weak entity (singular) |\n| Oval | Simple/Composite single-valued attribute; underlined attributes represent primary keys |\n| Concentric oval | Single/Composite multi-valued attribute |\n| Dotted oval | Derived attribute |\n| Diamond | Relationship (verb) |\n\n| Line | Representation |\n|:-:|:-|\n| Single line | Partial/Optional participation |\n| Double line | Total/Mandatory participation |\n| Line with horseshoe | Subtype declaration |\n\n# Relationships\n\n## Degrees of relationships\nRelationships can have different degrees to show in an ER model. Common degrees include the:\n- unary (one) degree;\n- binary (two) degree; and\n- ternary (three) degree.\n\n### Unary relationships\nRepresents the relationship between instances of a single entity. Also known as a recursive relationship.\n\n- It is important to assign a role name that signifies the function a participating entity plays in each relationship; this allows you to distinguish the meaning of each participation\n\n### Binary relationships\nRepresents the relationship between instances of two entities. Is the most common type of relationship encountered in data modelling.\n\n### Ternary relationships\nRepresents the relationship among instances of three entities.\n\n## Relationship constraints\nRelationships can be constrained such that only certain cases are valid in a database. This helps to plan out a database in greater detail.\n\n### Cardinality ratio\nRefers to the number of instances of an entity that can be associated with an instance of another entity. The three most commonly-used cardinality ratios used in databases include:\n- one-to-one (1:1) relationship;\n\t- example: one staff member supervising one branch\n- one-to-many (1:M) relationship; and\n\t- example: one book publisher publishing many books\n- many-to-many (M:N) relationship.\n\t- the 'N' is used to differentiate the letters, but still means many. Can be ignored (don't need to change)\n\t- example: many students taking many subjects\n\n### Participation\nSpecifies whether the existence of an entity depends upon it being another entity through the relationship. Shown in the ER diagram as different strokes of lines connecting entities and relationships.\n\nGenerally has two participation constraints:\n- partial/optional participation, where instances of an entity are related to instances of another entity through the relationship, but not necessarily all; and\n- total/mandatory participation, where instances of an entity must be associated with an instance of the related entity.\n\n# Types\n\nThere are two types of entities that can be drawn in an ER model. These are akin to base and derived classes in object-oriented programming:\n- Supertype — generic entity that can be divided into subtypes;\n- Subtype — a subset of a supertype that shares common attributes (inheritance) or relationships distinct from other subsets.\n\t- The subtype should not have a primary key, but rather inherit a primary key from its supertype.\n\nThe process of defiing a set of subtypes of an entity is known as specialisation. \n\nThe reverse process of abstraction, which involves:\n- supressing differences among entities;\n- identifying common features; and\n- generalising the entities into a supertype;\n\nis known as generalisation.\n\n## Constraints\nSimilar to relationship constraints, there are constraints when it comes to specialisation and abstraction.\n\n### Disjointment\nAn entity must only have one subtype or can have many subtypes according to the context of the situation. This is referred to as the disjoint constraint, in which an additional symbol (a circle with a character below) is added to denote the case.\n\nWhen a specialisation consists of only one subtype, there is no need to show the disjoint constraint.\n\n- `d` is used to represent that an entity is disjoint, meaning that the entity can only be one subtype; and\n- `o` is used to represent that an entity overlaps, meaning that the entity can be more than one substype.\n\n### Participation\nSpecifies whether the existence of an entity depends upon it being another entity through the relationship. Shown in the ER diagram as different strokes of lines connecting entities and relationships.\n\nGenerally has two participation constraints:\n- partial/optional participation, where instances of an entity are related to a subtype, but not necessarily; and\n- total/mandatory participation, where instances of an entity must be associated with a subtype.\n\n# Rough outline of steps\n\n1. Identify the main entities in the user's view of the enterprise.\n2. Identify the important relationships existing between the identified entities.\n3. Associate attributes with an appropriate entity or relationship.\n4. Identify the candidate keys for each entity before settling on a primary key.\n5. Identify supertypes and subtypes where appropriate.\n6. Draw the ER model for the database.\n7. Review the ER model.\n8. Reiterate where required.","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["technology","databases"]},"/technology/databases/sql":{"title":"SQL","content":"\nAbbreviated term for Structured Query Language, often pronounced as 'sequel'. Used as a language used in [[technology/databases/databases|databases]] to query for data according to specified instructions by the language. Used to create, query, and update relational databases.\n\n# Terminologies\n\n| Term | Definition |\n| :-:|:-|\n| Result set | The produced data after processing a query |\n| View | A table that is a saved result set |\n| Virtual table | Not a table in the database, but the query code is saved instead |\n| Null | A value that is unknown, not available, or not applicable |\n| Tuple | A term usually synonymous with a record in a table |\n| Relation | A term usually synonymous with a table |\n\n# Statements and functions\n\n## Statements\n| Statement | Description |\n|:-:|:-|\n| `SELECT` | Selects the given fields from a database |\n| `SELECT ... FROM ... WHERE` | Selects the given fields from a database, provided the conditions provided are true |\n| `FROM` | Specifies which table should data be retrieved from |\n| `AS` | Aliasing a field name in the query |\n| `DISTINCT` | Filters a field and removes duplicate values |\n| `CREATE VIEW` | Creates a new view |\n| `ORDER BY ... ASC` or `ORDER BY ... DESC` | Sorts a field in ascending or descending order |\n| `LIKE` | Performs pattern match searching; often `%` is used in conjunction to select zero or more characters |\n| `IN (...)` | Checks if the condition matches one of the items in a given list (similar to concatenating multiple `OR`s) |\n| `BETWEEN ... AND ...` | Checks if the condition is between the two given items; often used with dates |\n| `AND` | Concatenates conditions together such that both must be true to pass |\n| `OR` | Concatenates conditions together such that at least one must be true to pass |\n| `NOT` | Inverses a condition |\n\n## Functions\n- Scalar functions: functions that produces an output for each row of input\n- Aggregate functions: functions that accept values from multiple rows and produces an output\n\n### String functions\n\n| Function | Syntax | Kind | Description |\n|:-:|:-|:-:|:-|\n| `LOWER` | `LOWER(str)` | Scalar | Converts a string to lowercase |\n| `UPPER` | `UPPER(str)` | Scalar | Converts a string to uppercase |\n| `REPLACE` | `REPLACE(str, old_substring, new_substring)` | Scalar | Replaces a string with another given value |\n| `STR` | `STR(num)` | Scalar | Converts a numeral into a string |\n| `SUBSTRING` | `SUBSTRING(str, start, end)` | Scalar | Returns part of a string, inclusive of `start` and `end` |\n\n### Mathematical functions\n\n| Function | Syntax | Kind | Description |\n|:-:|:-|:-:|:-|\n| `CEILING` | `CEILING(num)` | Scalar | Returns the next integer of a given number |\n| `FLOOR` | `FLOOR(num)` | Scalar | Returns the previous integer of a given number |\n| `ROUND` | `ROUND(num, places)` | Scalar | Rounds up a number to a given number of decimal places |\n| `COUNT` | `COUNT(attribute)` | Aggregate | Returns the number of items in a group |\n| `MIN` | `MIN(attribute)` | Aggregate | Selects the minimum value in a set of values |\n| `MAX` | `MAX(attribute)` | Aggregate | Selects the maximum value in a set of values |\n| `AVERAGE` | `AVERAGE(attribute)` | Aggregate | Returns the average value in a set of values |\n| `SUM` | `SUM(attribute)` | Aggregate | Returns the sum of all values in a set of values |\n\n### datetime functions\n\nNote that for each syntax, `interval` refers to `DAY`, `MONTH`, `YEAR`, `WEEK`, `HOUR`, `MINUTE`, `SECOND`, etc.\n\n| Function | Syntax | Kind | Description |\n|:-:|:-|:-:|:-|\n| `DATEADD` | `DATEADD(interval, num, date)` | Scalar | Adds a given interval to a date |\n| `DATEDIFF` | `DATEDIFF(interval, end, start)` | Scalar | Returns the difference between two dates |\n| `GETDATE` | `GETDATE()` | Scalar | Gets the current date |\n| `DAY` | `DAY(date)` | Scalar | Returns an integer of the day of the date |\n| `MONTH` | `MONTH(date)` | Scalar | Returns an integer of the month of the date |\n| `YEAR` | `YEAR(date)` | Scalar | Returns an integer of the year of the date |\n| `FORMAT` | `FORMAT(date, format, culture)` | Scalar | Returns a date as a string in the given format |\n\n### System functions\n\n| Function | Syntax | Kind | Description |\n|:-:|:-|:-:|:-|\n| `FORMAT` | `FORMAT(val, format)` | Scalar | Returns a value formatted with the given format |\n| `ISNULL` | `ISNULL(attribute, replaced_value)` | Scalar | Replaces `NULL` values with a given value |\n\n# Logical operators\n\n| Operator | Operation |\n|:-:|:-|\n| `=` | equality |\n| `!=` or `\u003c\u003e` | not |\n| `\u003c` | less than |\n|  `\u003c=` | less than or equal to |\n| `\u003e` | greater than |\n| `\u003e=` | greater than or equal to |\n\n# Data types\nOften [[technology/data-typing|data typed]] and store a particular piece of required information; common data types include:\n\n| Data type | Used for |\n|:-:|:-|\n| `VARCHAR` | A variable-length string; can be used for anything ranging from an individual character to a string of thousands of characters. |\n| `INTEGER` or `INT` | A medium-sized integer (32-bits) |\n| `BOOL` | Boolean |\n\n# Best practices\n- End off queries with a semicolon to denote that the query is complete\n\t```sql\n\tSELECT name\n\tFROM patrons;\n\t```","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["technology"]},"/technology/development/agile-methdology":{"title":"Agile methdology","content":"\nAn iterative [[software-development-methodology|methodology]] which condenses the [[system-development-life-cycle|system development life cycle]]. Typically executes the SDLC in sprints lasting one to three or four weeks long. At every sprint, coding, testing, and quality verification is done. Refers to the Agile Manifesto to establish principles to guide a better approach to software development.\n\n# Process\n\n## Stand-up meetings\nFrequent meetings used by development teams to:\n- share need-to-know information;\n- keep the team on the same page;\n- disseminate announcements and briefings; and\n- evaluate current work performance.\n\n## User stories\nA short description of a function that the end-user wants told from their perspective. Agile generally involves the creation of user stories and discussion of them among the team.\n\nFor a good user story, consider using the mnemonic INVEST:\n- independent — stories must not be dependent on each other;\n- negotiable — details of stories must be changeable and agreeable between the client and development team.\n- valuable — stories must have business value to the client;\n- estimable — stories should be understood well enough by the client and small enough such that an approximation of time the developer will take to develop the feature can be established;\n- small — stories should be succinct as they're done in short sprints; and\n- testable — stories must allow for the development team to write tests.\n\n# Evaluation\n\n## Benefits\n- Agile encourages the client to be engaged throughout the project. This increases trust between the team and the client and fosters deep collaboration while ensuring that the requirements are understood.\n- Agile promotes transparency between the team and the client, such that the client can see the work in progress and check in frequently.\n- Agile promote the frequent delivery of progress, whether it's time-boxed or following a fixed schedule. Teams can test in stages, allowing for early release and beta builds for testing.\n- Sprints are often fixed in duration, meaning that Agile is generally predictable. The cost accrued is also limited to the work performed in each sprint.\n- Agile allows for changes to be made throughout the project, usually at each new iteration. This means that changes can be implemented in a matter of only a few weeks.\n- From a business perspective, Agile prioritises the client; the client determines a feature's priority. The features with the most value in business generally tends to be delivered first.\n- Agile is customer-focused, focusing on the development of user stories to define needed product features. Features are also generally tested (beta-tested) after each sprint to get feedback from customers.\n- Agile breaks down tasks into manageable units, making it easier to uphold a higher quality of standard. Each sprint can also find and fix bugs.\n\n## Detriements\n- An initial project with Agile lacks a stable plan, and the final product can look different from what was originally intended.\n- Agile can be a potential threat to business continuity and knowledge transfer as it emphasises less on documentation.\n- An Agile project can easily go off-track due to the client not being clear on the requirements or being unavailable.\n- An Agile project requires highly-experienced Agile developers.","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["development","development"]},"/technology/development/requirement-elicitation":{"title":"Requirement elicitation","content":"\nThe practice of collecting requirements of a system from users, customers, and other stakeholders. Also referred to as requirement gathering. Also involves analysing the current system, as the new system must carry functionality forward from the existing systems and to also understand the shortcomings and defects correctable from the existing systems.\n\nA requirement is a function or condition that a system must be able to perform, and specifies what a system should do without saying how the system should do it. It is important to consider the latter part to prevent solution bias (i.e., suggesting certain solutions while precluding others). Generally should include what the existing system does and what the new system has to do that the existing system does not.\n\n# Requirement types\n\nThere are two types of requirements to be considered when eliciting requirements:\n- functional requirements: describes what the system does or is expected to do (e.g., calculations, data manipulation, and processing); and\n- non-functional requirements: describes how well the system provides the functional requirements (e.g., performance, security, supportability, and reliability).\n\n# Techniques\n\nThere are three techniques used to investigate the requirements of a system:\n- [[#Background reading|background reading]];\n- [[#Interviews|interviews]]; and\n- observation.\n\n## Background reading\nUsed to understand the organisation and its business objectives through public sources of information (e.g., company reports, organisational charts, policy manuals, job descriptions, and documentation of existing systems).\n\n## Interviews\nUsed to get an in-depth understanding of the organisation's objectives, users' requirements, and people's roles.","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["development","technology"]},"/technology/development/software-development-methodology":{"title":"Software development methodology","content":"\nA formalised approach to implementing the [[system-development-life-cycle|system development life cycle]]. A set of practices and procedures for creating software, defining a set of rules and conventions as well as a systematical engineering approach for organising software projects.\n\nSome examples of methodologies include:\n- [[waterfall-methdology|Waterfall]]; and\n- [[agile-methdology|Agile]].\n","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["development","technology"]},"/technology/development/system-development-life-cycle":{"title":"System development life cycle","content":"\nA set of activities, methodologies, best practices, deliverables, and automated tools stakeholders use to develop and maintain information systems and software. Often related to in different [[software-development-methodology|methodologies]].\n\nImportant and frequently used as it ensures:\n- consistent process;\n- efficiencies allowing the sharing of resources between projects;\n- the production of consistent documentation that reduces lifetime costs to maintain the systems; and\n- the promotion of quality and control.\n\n# Cycle\n\nThere are six components to the SDLC:\n\n1. Analysis — At this stage, the team defines and identifies what the system should do and objectives are understood. Requirements are gathered where required with the client with the team.\n2. Design — At this stage, the team determines how best to create the system, defining what the system looks like and how the parts fit together.\n3. Construction — At this stage, the team builds the system according to the design created.\n4. Testing — At this stage, the team tests if the constructed system works according to the design and fulfils the user requirements.\n5. Installation — At this stage, the system is installed and delivered for use by the team to the client.\n6. Maintenance — At this stage, the team maintains the changes done after delivery and fixes any issues that arise.","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["development","technology"]},"/technology/development/waterfall-methdology":{"title":"Waterfall methdology","content":"\nA traditional [[software-development-methodology|methodology]] for information systems development. Known as waterfall because of its strict linear path, where each component depends on the one before it.\n\n![[waterfall-methodology.png]]\n\n# Evaluation\n\n## Benefits\n- Waterfall is straight-forward and structured, simple for simple projects.\n- At the end of each phase in Waterfall, the project's progress is evaluated and documented.\n- Tasks in phases may be assigned to specialised teams in Waterfall, encouraging everyone to focus on what they are good at and the production of good work by a respective team.\n\n## Detriments\n- Real-world projects rarely follow a simple sequential life cycle; iterations are almost inevitable, and the time between requirements analysis and the final installation may be lapses.\n- Waterfall is generally unresponsive to changes during the project, as majority of the planning is done during the early parts of the project.\n- Waterfall is only appropriate when the requirements are well-understood. Ones that are not will not perform well as there is a chance that iteration is needed.","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["development","technology"]},"/technology/markdown":{"title":"Markdown","content":"\nA lightweight markup language for creating formatted text using plain-text editors. Grown reasonably ubiquitous for its extensive use case (e.g., storing large textual content) in a way that is standard and easy to understand.\n\n## Syntax\n\n| Symbol | Description |\n|:-------:|:------------|\n| `** **` or `* *`  | Bold        |\n| `* *` or `_ _`   | Italicise   |\n| `~ ~` | Strikethrough |\n| `[title](https://example.com)` | Link |\n| `#` to `######` | Headings (H1 to H6) |\n| `-` | List items (non-ordinal)\n| `1.` to `n.` | List items (ordinal)","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["technology"]},"/technology/networking/address-resolution-protocol":{"title":"Address Resolution Protocol","content":"\nUsed to discover the [[technology/networking/media-access-control-address|MAC address]] of a device given its [[technology/networking/internet-protocol-address|IP address]]. There are particularly two parts to the ARP protocol, namely the request and response.\n\n# Process\n\n1. A host or router that needs to find the MAC address of another host or router on the network creates an ARP query packet which includes:\n\t- the sender's MAC and IP address; and\n\t- the receiver's IP address.\n2. The created packet gets broadcasted over the network to other hosts or routers.\n3. Every host or router receives the packet, but the host or router with the receiver's IP address creates a reply packet that includes its MAC address. This is then sent back to the initiating host or router.\n","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["technology","networking"]},"/technology/networking/application-layer":{"title":"Application layer","content":"\nThe fourth layer in the [[technology/networking/internet-protocol-suite|internet protocol suite]] and seventh layer in the [[technology/networking/open-systems-interconnection-model|OSI model]].\n\n# TCP/IP protocol suite\n\nIn the context of the TCP/IP suite, the application layer provides services to users' applications.\n\nSome examples of applicaation protocols in the suite at this layer include:\n- the [[technology/networking/dynamic-host-configuration-protocol|DHCP]];\n- the [[technology/networking/hypertext-transfer-protocol|HTTP]];\n- [[technology/networking/domain-name-system|DNS systems]];\n- the [[technology/networking/simple-mail-transfer-protocol|SMTP]]; and\n- [[technology/networking/secure-shell|SSH]].\n","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["technology","networking"]},"/technology/networking/area-networks":{"title":"Area networks","content":"\nWhen talking about networking, there are three kinds of area networks that are of importance. They include the:\n\n- local area network;\n- metropolitan area network; and\n- wide area network.\n\n# Local area network\n\nThe most common kind of network which spans a small geographical area (e.g., within a building, in a house, or multiple buildings within a campus).\n\n# Metropolitan area network\n\nA network that spans a medium-sized geographical area such as a town or city, often spanning across two or more buildings within the same town or city. Not as common as LANs or WANs.\n\n# Wide area network\n\nA network that spans across wide geographical locations, often over geographical boundaries (e.g., countries).\n","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["technology","networking"]},"/technology/networking/dynamic-host-configuration-protocol":{"title":"Dynamic Host Configuration Protocol","content":"\nA protocol typically employed in the provision and assignment of [[technology/networking/internet-protocol-address|IP addresses]]. It allows a host to obtain an IP address dynamically without the network administrator having to set up an individual profile for the host.\n\n# Process\n\nThe entire process for address assignment can be abbreviated to DORA, which stands for:\n1. discovery, where as hosts come online, they contact the DHCP server and make themselves known;\n2. offer, where the DHCP selects an available address and offers the address to the host;\n3. request, where the host confirms and requests the lease of the address; and\n4. acknowledgement, where the DHCP confirms the lease for a certain time duration and acknowledges the request.\n","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["technology","networking"]},"/technology/networking/ethernet":{"title":"Ethernet","content":"\nA [[technology/networking/wired-transmission-medium|wired transmission]] family of technologies frequently adapted for data transfer across the internet. Exists in the physical layer of the [[technology/networking/open-systems-interconnection-model|OSI model]]. Has two main implementations: Fast Ethernet (obsolete) and Gigabit Ethernet (current).\n\n# Standards\n\nEthernet has different classifications for the cabling used, in line with that of the cable types associated with [[technology/networking/twisted-pair-cable|twisted pair cables]]. The table below summarises the main differences:\n\n| Fast Ethernet layer |  Transmission rate | Cable type | Maximum distance |\n|:-:|:-:|:-:|:-:|\n| 100BASE-TX | 100 Mbps | UTP (Cat 5) | 100 metres |\n| 100BASE-FX | 100 Mbps | Optical fibre (multi-mode) | 400 metres (half-duplex); 2 kilometres (full duplex) |\n| 1000BASE-T | 1 Gbps | UTP (Cat 5e/6) | 100 metres |\n| 1000BASE-TX | 1 Gbps | UTP (Cat 6) | 100 metres |\n| 1000BASE-SX | 1 Gbps | Optical fibre (multi-mode) | 550 metres |\n| 1000BASE-LX | 1 Gbps | Optical fibre (both modes) | 550 metres (multi-mode); 5 kilometres (single-mode) |\n\n## Nomenclature\nFor each layer's name, there is a nomenclature that the layer's name abides to. In general, the designation has the following structure:\n\u003cdiv style=\"text-align: center\"\u003e\nXXXXYYYY-ZN\n\u003c/div\u003e\nwhere:\n- XXXX refers to the transmission rate (e.g., 100, 1000, 10G)\n- YYYY refers to either BASE, BROAD, or PASS where:\n\t- BASE refers to baseband signaling;\n\t- BROAD refers to broadband signalling; and\n\t- PASS refers to passband signalling; and\n- Z refers to either one of the following where:\n\t- T refers to twisted pair;\n\t- F refers to optical fibre (various wavelengths);\n\t- S refers to optical fibre (multi-mode, 850 nm short wavelength);\n\t- L refers to optical fibre (usually single-mode, 1300 nm long wavelength);\n\t- T1 refers to single-pair twisted pair;\n\t- E or Z refers to optical fibre (single-mode, 1500 nm extra long wavelength);\n\t- B refers to optical fibre (usually single-mode, bidirectional) using WDM;\n\t- P refers to optical fibre (passive); and\n\t- H refers to plastic optical fibre.\n- N refers to the PCS encoding method where:\n\t- X refers to an 8b/10b or 4B5B block encoding; and\n\t- R refers to large block encoding.\n\n# Type II Ethernet Frame\n\n![[images/type-ii-ethernet-frame.png]]\n\nA [[technology/networking/open-systems-interconnection-model|data link]] protocol data unit that includes information about a particular packet. Spans between 64 and 1518 bytes. Has three primary components to it, namely the:\n- [[media-access-control|MAC]] header spanning 14 bytes (6 + 6 + 2), including the:\n\t- destination [[technology/networking/media-access-control-address|MAC address]];\n\t- source MAC address; and\n\t- EtherType (used to indicate which protocol is encapsulated in the payload);\n- payload spanning 46 to 1500 bytes; and\n- CRC checksum spanning 4 bytes.","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["technology","networking"]},"/technology/networking/ieee-802.11":{"title":"IEEE 802.11","content":"\nA part of the IEEE 802 standards (relating to [[technology/networking/area-networks#Local area network|LANs]]) that specifies the set of media access control and physical layer protocols for implementing [[technology/networking/wireless-transmission-medium#Wireless LAN|WLANs]]. Most commonly known to be the standard employed by the Wi-Fi Alliance known as Wi-Fi.\n\n# IEEE 802.11a–802.11be\n\nThe Wi-Fi Alliance came up with a consumer-friendly generation numbering scheme in 2018. It denotes a numerical numbering system for different substandards employing the IEEE 802.11 protocol. The table below shows the details of each generation:\n\n| Wi-Fi generation | IEEE standard | Frequency band | Maximum transmission rate | Year introduced |\n|:-:|:-:|:-:|:-:|:-:|\n| Wi-Fi 1 | 802.11b | 2.4 GHz | 11 Mbps | 1999 |\n| Wi-Fi 2 | 802.11a | 5 GHz | 54 Mbps | 1999 |\n| Wi-Fi 3 | 802.11g | 2.4 GHz | 54 Mbps | 2003 |\n| Wi-Fi 4 | 802.11n | 2.4 GHz, 5 GHz | 150 Mbps per stream, 4 antennae | 2009 |\n| Wi-Fi 5 | 802.11ac | 5 GHz | 867 Mbps per stream, 8 antennae | 2014 |\n| Wi-Fi 6 | 802.11ax | 2.4 GHz, 5 GHz, 6 GHz | 9608 Mbps | 2019, 2021 (6 GHz) |\n| Wi-Fi 7 | 802.11be | 2.4 GHz, 5 GHz, 6 GHz | 46120 Mbps | 2024 |\n\n# IEEE 802.11s\n\nThe IEEE 802.11s standard enables wireless devices to conect to each other, creating a mesh network. The Wi-Fi Alliance created Wi-Fi EasyMesh that exists under this standard, bringing interoperability to mesh Wi-Fi hardware.","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["technology","networking"]},"/technology/networking/internet-layer":{"title":"Internet layer","content":"\nThe second layer in the [[technology/networking/internet-protocol-suite|internet protocol suite]]. Mainly responsible for packet forwarding, including routing through intermediate routers.\n\nSeveral protocols employed in the internet layer include:\n- [[technology/networking/internet-protocol-address|IP addresses]]; and\n- [[technology/networking/internet-control-message-protocol-address|ICMP addreses]].","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["technologies","networking"]},"/technology/networking/internet-protocol":{"title":"Internet Protocol","content":"\nA network layer communications protocol in the [[technology/networking/internet-protocol-suite]] for relaying datagrams across network boundaries. Provides a packet delivery service between end hosts, also known as routing.\n","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["technology","networking"]},"/technology/networking/internet-protocol-address":{"title":"Internet Protocol address","content":"\nAn 4-byte (i.e., 32-bit) identifier for a network device typically assigned by another more prominent network device that identifies the device in the network using the [[technology/networking/internet-protocol|internet protocol]]. Typically has two components to it, namely the:\n- network identifier; and\n- host identifier.\n\nUsually expressed in a decimal format of a byte per section, separated by periods. IP addresses therefore range from 0.0.0.0 to 255.255.255.255 (256 values per byte).\n\n# IP address classes\n\nIP addresses have different classifications based on the how many bits the network identifier occupies. There are in particular three classes, namely:\n- Class A addresses (1-byte network addresses, ranging from 0.0.0.1 to 127.255.255.254);\n- Class B addresses (2-byte network addresses, ranging from 128.0.0.1 to 191.255.255.254); and\n- Class C addresses (3-byte network addresses, ranging from 192.0.0.1 to 223.255.255.254).\n\nFor each class, the very first and last address are used specially for identifying the network and broadcasting. For example, for a range of 192.168.1.0 to 192.168.1.255, 192.168.1.0 is used for identifying the network and 192.168.1.255 is used for broadcasting. The rest is usable by other network devices.\n\n# Private IP addresses\n\nUsually just used in internal networks. Not routable through the internet and will therefore not work in the internet, and must be converted to a public IP address instead. Each IP address class has a range dedicated to private IP addresses, namely:\n- 10.0.0.0 to 10.255.255.255 for Class A addresses;\n- 172.16.0.0 to 172.31.255.255 for Class B addresses; and\n- 192.168.0.0 to 192.168.255.255 for Class C addresses.\n\nTo translate or map a private address to or fro a public address, [[technology/networking/network-address-translation|network address translation (NAT)]] can be used.\n\n# Assignment of IP addresses\n\nIP addresses can be static or dynamic, and they are assigned via the [[technology/networking/dynamic-host-configuration-protocol|Dynamic Host Configuration Protocol (DHCP)]].\n\n# Binding of IP address with [[technology/networking/media-access-control-address|MAC address]]\n\nIP addresses are often bound together with MAC addresses via the [[technology/networking/address-resolution-protocol|Address Resolution Protocol (ARP)]] and, in the past, the Reverse Address Resolution Protocol (RARP).","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["technologies","networking"]},"/technology/networking/internet-protocol-suite":{"title":"Internet protocol suite","content":"\nA framework for organising the set of communication protocols used in the internet and similar networks. Also commonly known as the [[technology/networking/transmission-control-protocol|TCP]]/[[technology/networking/internet-protocol|IP]] protocol suite.\n\nThe suite is somewhat similar to, but is not necessarily the same, as the [[technology/networking/open-systems-interconnection-model|OSI model]]. Originally has four layers in total, namely the:\n1. network interface layer, including data link and physical interfaces (e.g., [[technology/networking/ethernet|Ethernet]] and [[technology/networking/wireless-transmission-medium#Wireless LAN|wireless LAN]]);\n2. [[technology/networking/internet-layer|internet layer]], including interfaces that connect to the internet (e.g., the [[technology/networking/internet-protocol|IP]]);\n3. [[technology/networking/transport-layer|transport layer]], including interfaces responsible for transport (e.g., [[technology/networking/transmission-control-protocol||TCP]], [[technology/networking/user-datagram-protocol|UDP]], and port numbers); and\n4. application layer, includding applications that use the internet (e.g., [[technology/networking/hypertext-transfer-protocol|HTTP]], [[technology/networking/dynamic-host-configuration-protocol|DHCP]], [[technology/networking/domain-name-system|DNS]] and FTP).\n\nModern implementations of the TCP/IP protocol suite extends the model to include one more layer, the physical layer, and amends existing layers. The modern suite has five layers in total, namely the:\n1. physical layer, including how data is physically transmitted (e.g., [[technology/networking/twisted-pair-cable#Categories|UTP cables]], optical fibre cables and radio frequencies);\n2. data link layer, including the interfaces transmitting data (e.g., Ethernet and wireless LAN);\n3. [[technology/networking/internet-layer|internet layer]];\n4. [[technology/networking/transport-layer||transport layer]]; and\n5. application layer.","lastmodified":"2023-04-25T01:21:29.105539243Z","tags":["technology","networking"]},"/technology/networking/media-access-control-address":{"title":"Media access control address","content":"\nA 6-byte (i.e., 48-bit) identifier for a network device typically fixed and tied to the device's hardware. Typically comprises of two components to it, namely the:\n- organisational unique number—a number assigned by the IEEE Registration Authority Committee to manufacturers; and\n- [[technology/networking/network-interface-controller|network interface controller]] number—a number typically assigned by the manufacturer.\n\nUsually expressed in a hexadecimal format of a byte per section, separated by colons. MAC addresses therefore range from 00:00:00:00:00:00 to FF:FF:FF:FF:FF:FF.\n\n","lastmodified":"2023-04-25T01:21:29.109539328Z","tags":["technology","networking"]},"/technology/networking/modem":{"title":"Modem","content":"\nA network device often used in long-range networks to extend the range of the transmission of data. The term is a portmanteau of modulator-demodulator.\n\nModulation refers to the process of converting digital data into a form suitable for transmission. Inversely, demodulation is converting transmitted signals into digital data.\n","lastmodified":"2023-04-25T01:21:29.109539328Z","tags":["technology","networking"]},"/technology/networking/network":{"title":"Network","content":"\nThe connection of at least two computer systems either by a cable or wireless connection. In today's context, the internet is the world's largest network (literally spelling out inter network) that connects devices across the world.\n\nThere can be many kinds of networks. They may differ in terms of:\n- transmission medium (wireless vs wired); and\n- method of connection (centralised vs peer-to-peer).\n\nA network typically has several important network devices, including the:\n- [[technology/networking/network-switch-and-bridge|network switch]],\n","lastmodified":"2023-04-25T01:21:29.109539328Z","tags":["technology","networking"]},"/technology/networking/network-address-translation":{"title":"Network address translation","content":"\nA method of mapping an [[technology/networking/internet-protocol-address|IP address]] into another by modifying address information in the IP header of packets while in transit across a traffic routing device. Often used to convert to and fro public and private IP addresses.\n\n\n","lastmodified":"2023-04-25T01:21:29.109539328Z","tags":["technology","networking"]},"/technology/networking/network-hub":{"title":"Network hub","content":"\nA network device that connects multiple devices to the same network and transmits received packets to all connected devices, regardless of which device the packet is intended for. Works similarly to a loudspeaker: it broadcasts the packet to all devices.\n","lastmodified":"2023-04-25T01:21:29.109539328Z","tags":["technology","networking"]},"/technology/networking/network-interface-controller":{"title":"Network Interface Controller","content":"\nA network device built or inserted into end-user devices that provides [[technology/networking/area-networks#Local area network|LAN]] connectivity to the device. Often comes in the form of a card that can be installed, an external USB adapter, or being built into the motherboard.\n","lastmodified":"2023-04-25T01:21:29.109539328Z","tags":["technology","networking"]},"/technology/networking/network-organisation":{"title":"Network organisation","content":"\nA network can differ in terms of the roles each device plays in the network. Generally, devices in a network can take up any of two roles:\n\n- a client — a network device initiating a connection to a server requesting for resources and services to perform operations; or\n- a server — a network device that shares resources and responds to requests from devices and other servers on the network.\n\nServers often need a lot of computing power as they need to be able to respond to many requests from many devices at once.\n\nA network can be organised in two ways:\n\n- a client-server network; or\n- a peer-to-peer network.\n\n# Client-server network\n\nAn architecture that has one or more higher-capacity computer acting as servers and other computers acting as clients.\n\n- `[+]` Allows the centralised control of data and resources\n- `[+]` It is easy to schedule backups of all shared files at regular intervals as only a few computers at most have the files\n- `[+]` Enhanced security as servers can use specialised software or operating system features to protect themselves\n- `[-]` Initially costly due to the need of a server\n- `[-]` Costs needed on administrative tasks and maintenance of server and clients\n\n# Peer-to-peer network\n\nAn architecture where all computers are considered equals and the load is distributed among all computers. Computers in a peer-to-peer network are able to act as both clients and servers.\n\n- `[+]` Cheaper to set up as no cost is incurred on servers\n- `[+]` Easy to set up as no specialised software or operating system features are needed\n- `[-]` More effort is needed to access and back up resources as they are distributed across computers\n- `[-]` Reduced security as access rights are not administered by a central server\n\n","lastmodified":"2023-04-25T01:21:29.109539328Z","tags":["technology","networking"]},"/technology/networking/network-router":{"title":"Network router","content":"\nA network device that receives and forwards data between separate networks using Internet protocols.\n\n","lastmodified":"2023-04-25T01:21:29.109539328Z","tags":["technology","networking"]},"/technology/networking/network-switch-and-bridge":{"title":"Network switch and bridge","content":"\nA network device that constructs a single network and provides connection points to all network-enabled devices to form a local area network. The terminologies are different, but both refer to the same thing:\n\n- When connecting two similar networks together, the device is known as a network bridge.\n- When connecting more than two similar networks together, the device is known as a network switch.\n","lastmodified":"2023-04-25T01:21:29.109539328Z","tags":["technology","networking"]},"/technology/networking/open-systems-interconnection-model":{"title":"Open Systems Interconnection model","content":"\nA conceptual model that provides the common basis for the coordination of standards proposed by the International Organisation for Standardisation for the purpose of systems interconnection. Has a derived version: the [[technology/networking/internet-protocol-suite|TCP/IP protocol suite]].\n\nHas seven layers in total, namely the:\n1. physical layer;\n2. data link layer;\n3. network layer;\n4. [[technology/networking/transport-layer|transport layer]];\n5. session layer;\n6. presentation layer; and\n7. [[technology/networking/application-layer|application layer]].\n","lastmodified":"2023-04-25T01:21:29.109539328Z","tags":["technology","networking"]},"/technology/networking/residential-gateway":{"title":"Residential gateway","content":"\nA network device often used in home and small office networks that combines the [[technology/networking/network-router|router]], [[technology/networking/network-switch-and-bridge|switch]], and [[technology/networking/wireless-access-point|wireless access point]]. Also usually comes with two software components: [[technology/networking/dynamic-host-configuration-protocol|DHCP]] and [[technology/networking/network-address-translation|NAT]].\n","lastmodified":"2023-04-25T01:21:29.109539328Z","tags":["technology","networking"]},"/technology/networking/transmission-control-protocol":{"title":"Transmission Control Protocol","content":"\nA connection-oriented protocol under the [[technology/networking/transport-layer|transport layer of the internet protocol suite]]. Connections made by the TCP are established prior to data transfer, maintained throughout the data exchange, and then terminated at the end of the communication.\n\nProvides reliable data transfers using acknowledgements, error detection, and recovery.\n\nCommon applications that use the TCP include:\n- the [[technology/networking/hypertext-transfer-protocol|Hypertext Transfer Protocol (HTTP)]];\n- the [[technology/networking/file-transfer-protocol|File Transfer Protocol (FTP)]];\n- [[technology/networking/telnet|telnets]];\n- the [[technology/networking/simple-mail-transfer-protocol|Simple Mail Transfer Protocol (SMTP)]]; and\n- the [[technology/networking/post-office-protocol|Post Office Protocol (POP)]].\n\n# Header\n\nRefers to additional metadata that is required to ensure the proper transmission of the data to the relevant destination. Has 11 fields to it, namely the:\n- source port spanning 16 bits;\n- destination port spanning 16 bits;\n- sequence number spanning 32 bits;\n- acknowledgement number spanning 32 bits;\n- data offset spanning 4 bits;\n- reserved spanning 3 bits;\n- flags spanning 9 bits and contain specific components:\n\t- URG (urgent pointer);\n\t- ACK (acknowledgement);\n\t- PSH (push);\n\t- RST (reset);\n\t- SYN (synchronise?);\n\t- FIN (finish);\n- window spanning 16 bits;\n- checksum spanning 16 bits;\n- urgent pointer spanning 16 bits; and\n- options, an optional field spanning between 0 and 320 bits.","lastmodified":"2023-04-25T01:21:29.109539328Z","tags":["technology","networking"]},"/technology/networking/transmission-medium":{"title":"Transmission medium","content":"\nThe method in which data is being transmitted to and from from. There are usually two classifications of transmission media:\n\n- [[technology/networking/wired-transmission-medium|wired transmission mediums]]; and\n- [[technology/networking/wireless-transmission-medium|wireless transmission mediums]].\n\nWhen considering the medium of choice, there are usually multiple factors that come into play to settle the score. They include the:\n- maximum speed (rate of transmission);\n- distance;\n- security;\n- fire safety;\n- ease of installation;\n- ease of maintenance; and\n- relative cost.","lastmodified":"2023-04-25T01:21:29.109539328Z","tags":["technology","networking"]},"/technology/networking/transport-layer":{"title":"Transport layer","content":"\nThe third layer in the [[technology/networking/internet-protocol-suite|internet protocol suite]]. Mainly used to provide end-to-end communication services for applications and is more focused on connection-oriented communications. Where required, the protocol segments data into smaller segments and reassembles the segments at the receiving host.\n\nSeveral protocols employed in the transport layer include the:\n- [[technology/networking/transmission-control-protocol|Transmission Control Protocol (TCP)]]; and\n- [[technology/networking/user-datagram-protocol|User Datagram Protocol (UDP)]].\n\n# Port numbers\n\nIn both TCP and UDP, port numbers play an important role as they identify the application protocols by port numbers. Ports cannot be occupied by two applications at the same time, and therefore must be ordered and kept track of.\n\nWell-known ports are often reserved for the different protocols. These ports usually serve critical networking applications (e.g., [[technology/networking/hypertext-transfer-protocol|HTTP]]) and therefore need to be standardised across devices. Some of these ports include:\n- 80 for [[technology/networking/hypertext-transfer-protocol|HTTP]];\n- 21 for [[technology/networking/file-transfer-protocol|FTP]];\n- 22 for [[technology/networking/secure-shell|SSH]];\n- 23 for [[technology/networking/telnet|telnets]];\n- 53 for [[technology/networking/domain-name-system|DNS]]; and\n- 443 for [[technology/networking/hypertext-transfer-protocol|HTTPS]].\n","lastmodified":"2023-04-25T01:21:29.109539328Z","tags":["technology","networking"]},"/technology/networking/twisted-pair-cable":{"title":"Twisted pair cable","content":"\n\nA type of wiring used in communications in which two conductors of a single circuit are twisted together for the purposes of improving electromagnetic compatibility.\n\nThere are two types of twisted pair cables:\n- shielded twisted pair (STP) cables, in which an additional layer of foil or wire braid is woven around the twisted pairs; and\n- unshielded twisted pair (UTP) cables, in which there is a lack of foil or wire braid but costs are lower.\n\nThe most commonly-used type of cable, RJ45, uses unshielded twisted pair cables. Ethernet is a protocol that is built on RJ45 cables.\n\n# Categories\n\nThere are several categories that cables, particularly UTP cables, are classified under:\n\n| Category | Bandwidth | Comments |\n|:-:|:-:|:-|\n| Cat 1 | - | Often used in telephony; able to carry voice, but not data. Usually uses RJ11 connectors |\n| Cat 2 | 4 Mbps | Obsolete |\n| Cat 3 | 10 Mbps | Obsolete |\n| Cat 4 | 20 Mbps | Obsolete |\n| Cat 5 | 100 Mbps | Almost obsolete |\n| Cat 5e | 1 Gbps | An improvement over Cat 5 |\n| Cat 6 | 10 Gbps | Cables with this category are limited to 55 metres |\n| Cat 6A | 10 Gbps | An augmented version of Cat 6. Cables with this category are limited to 100 metres |","lastmodified":"2023-04-25T01:21:29.109539328Z","tags":["technologies","networking"]},"/technology/networking/user-datagram-protocol":{"title":"User Datagram Protocol","content":"\nA connectionless protocol under the [[technology/networking/transport-layer|transport layer of the internet protocol suite]]. Starts data transfers without establishing a connection and is therefore less reliable but simple with low overhead.\n\nOften used for transaction-based services such as:\n- [[technology/networking/domain-name-system|DNS systems]]; and\n- the [[technology/networking/dynamic-host-configuration-protocol|DHCP]].","lastmodified":"2023-04-25T01:21:29.109539328Z","tags":["technology","networking"]},"/technology/networking/wi-fi-protected-access":{"title":"Wi-Fi Protected Access","content":"\nA brand of security algorithms developed after 2000 by the Wi-Fi Alliance to secure Wi-Fi networks. Also referred to by the TKIP standard. Defined in response to critical weaknesses in [[technology/networking/wired-equivalent-privacy|WEP]].\n\n# WPA2\n\nThe successor to WPA, introduced in 2004. Requires testing and certification by the Alliance and implements mandatory elements stated by the IEEE standard (802.11i), including mandatory support for Counter Mode Cipher Blocking Chaining Message Authentication Code Protocol (CCMP), an Advanced Encryption Standard (AES)-based encryption mode.\n\nThere are two types of the WPA2 security type, namely:\n- WPA2-Personal (also known as WPA2-PSK), where the security keys provided on end-user devices must match the key set on the wireless [[technology/networking/network-router|router]] or [[technology/networking/wireless-access-point|wireless AP]]; and\n- WPA2-Enterprise, where a remote authentication server (e.g., a Remote Authentication Dial-In User Service (RADIUS) server) is employed.","lastmodified":"2023-04-25T01:21:29.109539328Z","tags":["technology","networking"]},"/technology/networking/wired-equivalent-privacy":{"title":"Wired Equivalent Privacy","content":"\nAn obsolete security algorithm for 802.11 wireless networks first ratified in 1997. Suffered from several critical security issues, allowing it to be easily cracked. Made obsolete with the introduction of [[technology/networking/wi-fi-protected-access|WPA]] in 2003 and made fully deprecated by 2004.","lastmodified":"2023-04-25T01:21:29.109539328Z","tags":["technology","networking"]},"/technology/networking/wired-transmission-medium":{"title":"Wired transmission medium","content":"\nThe method of transmitting data through physical means. Is ubiquitous even in today's world, owing to their performance in transmitting data compared to wireless transmission media. \n\nThe two common types of wired transmission medium include:\n\n- [[technology/networking/twisted-pair-cable|twisted pair cables]]; and\n- [[#Optical fibre cables|optical fibre cables]].\n\n# Optical fibre cables\n\nOften used in [[technology/networking/area-networks#Local area network|LANs]] and especially used in cases where electromagnetic interference is an issue. A more modern format compared to twisted pair cables, offering better bandwidth, transmission distance, and resistance as well as lower maintenance.\n\nThere are two types of optical fibre cables:\n- single-mode optical fibre, in which a laser light source is used for transmission; and\n- multimode optical fibre, in which an LED light source is used for transmission.\n\nThere are different kinds of connectors that optical fibre cables can use. Some popular ones include the:\n- ST connector, often used for multimode fibre;\n- SC connector, often used for single-mode fibre; and\n- LC conected, often highly favoured for single-mode fibre.\n\nOptical fibre cables are fragile as they contain glass. Should the cables bend, the network can fail entirely.\n\n# Comparison\n\nThere are a few things to note when considering which type of wired transmission medium to use. You may consider the:\n\n- possibility of interference, where:\n\t- optical fibre cables are immune to electromagnetic induction;\n\t- STP cables are protected, but not immune, from interference by shielding with a metallic screen; and\n\t- UTP are susceptible to interference;\n- difficulty of installation, where:\n\t- optical fibre cables are difficult to install as they are fragile and require mechanical protection (e.g., plastic sleeves, steel armour); and\n\t- STP cables are thick and less flexible than UTP cables;\n- safety, where:\n\t- electric current flowing through copper cables (i.e., twisted pair cables) can pose shock and fire hazards and cause sparks;\n- maintenance, where:\n\t- optical fibre cables can last for a long time; while\n\t- copper cables deteriorate over time.\n\n\n","lastmodified":"2023-04-25T01:21:29.109539328Z","tags":["technology","networking"]},"/technology/networking/wireless-access-point":{"title":"Wireless access point","content":"\nA network device that provides a connection between wireless devices up to 100 metres away. Usually connects to wired networks and supplies a wireless network. Most wireless access points create wireless networks conforming to the Wi-Fi standard.\n\nUsually are fitten with several components, including:\n- antennae;\n- radio frequency transmitters;\n- radio frequency receivers;\n- RJ45 wired network interface (typically using [[technology/networking/ethernet|Ethernet]]); and a \n- power supply.\n\t- Most modern APs support Power over Ethernet, a standard or ad hoc system that passes electric power along with data in the Ethernet cabling\n\n# Multiple-input and multiple-output\n\nA method for multiplying the capacity of a radio link using multiple transmission and receiving antennae, exploiting multipath propogation. APs and end-user devices should both support MIMO for optimal performance and range.\n\nSpecifications for MIMO APs are given in the following format:\n\u003cdiv style=\"text-align: center\"\u003e\nOxI: S\n\u003c/div\u003e\nwhere:\n- O refers to the number of output antennae;\n- I refers to the number of input antennae; and\n- S refers to the number of concurrent separate data streams.\n\n\n\n","lastmodified":"2023-04-25T01:21:29.109539328Z","tags":["technology","networking"]},"/technology/networking/wireless-transmission-medium":{"title":"Wireless transmission medium","content":"\nThe method of transmitting data through wireless means. Uses radio frequencies to transmit data. The most common standard in today's world used is Wi-Fi by the Wi-Fi Alliance.\n\nAs with other radio communication, wireless transmission mediums work in a two-way system with a transmitter (wireless [[technology/networking/network-interface-controller|NIC]]) and receiver. Two frequent hardware devices enabling wireless transmission include the [[technology/networking/wireless-access-point|wireless access point]] and [[technology/networking/residential-gateway|residential gateway]].\n\n# Wireless [[technology/networking/area-networks#Local area network|LAN]]\n\nA computer network that links two or more devices using a wireless connection to form a local area network[^1]. Most WLANs today conform to the [[technology/networking/ieee-802.11|IEEE 802.11]] standard.\n\n## Parameters\nTypically has several parameters that must be specified, namely the:\n- [[#Service set identifier|service set identifier (SSID)]];\n- [[#Frequency channel|frequency channel]];\n- [[#Frequency band|frequency band]];\n- [[#Security type|security type]];\n- encryption type; and\n- other miscellaneous parameters, including:\n\t- the host's [[technology/networking/internet-protocol-address||IP address]]; and\n\t- a [[technology/networking/media-access-control-address|MAC address]] filter list.\n\n### Service set identifier\nA case-sensitive text string that uniquely identifies a service set (i.e., WLAN). Comprises of a sequence of alphanumeric characters up to 32 characters. Usually broadcasted by the AP to all wireless devices in the coverage range.\n\n### Frequency channel\nA portioned range in the radio frequencies occupied by WLANs. Adjacent WLANs should use different frequency channels to prevent interference with each other. Usually automatically selected by the AP.\n\n### Frequency band\nThe interval in the frequency domain used. In the context of Wi-Fi networks, depending on which generation of Wi-Fi the network operates in, the band may be 2.4 GHz, 5 GHz, or 6 GHz.\n\nHigher-numbered bands enjoy better performance, have less proneness to interference, and offer more non-overlapping channels. They are, however, disadvantaged in range as they cover a shorter range than their lower-numbered counterparts.\n\n### Security type\nThe protocol used to maintain security within the WLAN. Can be open, meaning there is no authentication and encryption. If using the Wi-Fi standard, [[technology/networking/wired-equivalent-privacy|Wired Equivalent Privacy (WEP)]] (now obsolete) and [[technology/networking/wi-fi-protected-access|Wi-Fi Protected Access (WPA)]] are additional types to secure the network.\n\n## Roaming\nA term used on clients that refer to surveying radio frequencies and finding an AP that provides better service (i.e., has a stronger signal or higher data rate) when moving from one point to another.\n\nAPs should share the same SSID, authentication, and encryption, with channels being different.\n\n[^1]: See [[technology/networking/network|network]].\n","lastmodified":"2023-04-25T01:21:29.109539328Z","tags":["technology","networking"]},"/technology/obsidian":{"title":"Obsidian","content":"\nA [[technology/markdown|Markdown]]-based note-taking app centred around keeping distinct ideas connected through identifying relationships they share with one another. Marketed as \"a second brain, for you, forever\". Featuring a vault-like system for organisation with pure Markdown files, assuring that [[data]] won't be lost if Obsidian eventually shuts down (since it's a [[technology/open-source|closed source]] service), it is a form of [[productivity/personal-knowledge-management|personal knowledge management]].\n\n## How should I use Obsidian?\n* As much as possible, each note within Obsidian should be atomic in its own right, meaning that each page is for a specific item to talk about\n* **Don't try to force yourself to think of more things for a nice graph view.** The more you do it, the more you'll eventually tire yourself out\n\n## Personal opinion\n- Pretty cool that backlinking is easy, and that relationships between notes are prioritised (described as \"links being first-class citizens\" by Obsidian)","lastmodified":"2023-04-25T01:21:29.109539328Z","tags":["technology"]},"/technology/open-source":{"title":"Open source","content":"\nA term used to initially refer to software or hardware with source code that is publically accesible. Currently has expanded its scope of definition, ranging from software to a movement and way of working. Current definitions to open source by the [Open Source Initiative](https://opensource.org/osd) include additional restraints, including:\n\n- free redistribution, where open-source products must not require a royalty or other fee;\n- having open source code, where distribution must be allowed in source code and the compiled form,\n- allowing derived works, where open-source products must be allowed modifications and derived works by other authors, and more.\n\n# Licencing\n\nLicencing plays a big role in open source; developers who write products must assign a relevant licence to be considered an open-source product. Licences restrict what authors who make deriviations from an original open-source product can or cannot do, including governing the use of copyright, distribution ability, and rights.\n\nCommon open source licences can be found on [ChooseALicense.com](https://choosealicense.com/), a guide-like website made by GitHub to help developers pick an appropriate licence for their projects.\n","lastmodified":"2023-04-25T01:21:29.109539328Z","tags":["technology"]},"/technology/programming/class":{"title":"Class","content":"\nA blueprint for creating objects, often a feature of many object-oriented programming languages.\n\n# Attributes and variables\n\nMore or less an interchangeable term used to describe low-level storage slots attached to an object.\n\n## Properties\n\nIn most OO languages, properties are used to define getter and setter functions to change the value of or read and return the value of an attribute in a class. The way properties are defined varies across programming languages.\n\n- C#\n```c#\nclass SavingsAccount\n{\n\t// Variables are made private to prevent illegal accessing out of the object\n\tprivate string accountNo;\n\tpublic string AccountNo\n\t{\n\t\tget { return accountNo; }\n\t\tset { accountNo = value; } // Can be extended to have additional checks or validation\n\t}\n\t\n\tprivate string accountName;\n\tpublic string AccountName { get; set; } // Shorthand\n}\n```\n\n# Methods\n\nThere are three types of methods in a user-defined class:\n- constructors — used to create objects of a class;\n- user-defined methods — used to perform a specific task related to the class; and\n- printing methods — used to print out the class in a particular format when called by the programming language's print function.\n\n## Constructors\n\nA special function used to create objects of a class. Usually a required method in many OO programming languages.\n\nThe following code chunks below show some examples for different languages:\n\n- C#\n```c#\nclass SavingsAccount {\n\t// The name of the class and constructor must match.\n\t// Default constructor — does not have parameters\n\tpublic SavingsAccount() { }\n\t\n\t// Parameterised constructor with parameters\n\tpublic SavingsAccount(string no, string name, double bal)\n\t{\n\t\tAccountNo = no;\n\t\tAccountName = name;\n\t\tBalance = bal;\n\t}\n}\n```\n- Python\n```python\nclass SavingsAccount:\n\t# The name of the constructor must be __init__.\n\t# Default constructor — does not have parameters\n\tdef __init__(self):\n\t\tpass\n\t\n\t# Parameterised constructor with parameters\n\tdef __init__(self, no, name, bal):\n\t\tself.accountNo = no\n\t\tself.accountName = name\n\t\tself.balance = bal\n```\n\n## Printing methods\n\nBecause we won't know what exactly to print out, we may need to define what to print out when a language's printing function is called on an object of a class. The name of the function varies across programming languages.\n\n- C#\n```c#\nclass SavingsAccount {\n\t// The name of the function must be ToString.\n\tpublic override string ToString()\n\t{\n\t\treturn \"AccountNo: \" + AccountNo +\n\t\t\t\" AccountName: \" + AccountName +\n\t\t\t\" Balance: \" + Balance;\n\t}\n}\n```\n- Python\n```python\nclass SavingsAccount:\n\t# The name of the function must be __str__.\n\tdef __str__(self):\n\t\treturn \"AccountNo: \" + self.accountNo +\n\t\t\t\" AccountName: \" + self.accountName +\n\t\t\t\" Balance: \" + self.balance\n```","lastmodified":"2023-04-25T01:21:29.109539328Z","tags":["technology","programming"]},"/technology/programming/encapsulation":{"title":"Encapsulation","content":"\nThe process of enclosing certain information. In the context of object-oriented programming, encapsulation refers to hiding irrelevant data (e.g., variables and methods) outside of a class.\n\n# Access specifiers\n\nMany OOP-based languages utilise access specifiers to implement encapsulation in code. The following are some examples of certain access specifiers used:\n\n| Access specifier | Visible to objects of other classes _within the namespace_ | Visible to objects of child classes _within the namespace_ | Visible to objects of other classes _outside the namespace_ | Visible to objects of child classes _outside the namespace_ |\n|:-:|:-:|:-:|:-:|:-:|\n| `public` | **Yes** | **Yes** | **Yes** | **Yes** |\n| `private` | No | No | No | No |\n| `protected` | No | **Yes** | No | **Yes** |\n| `internal` | **Yes** | No | No | No |\n| `protected internal` | **Yes** | **Yes** | No | No |\n","lastmodified":"2023-04-25T01:21:29.109539328Z","tags":["technology","programming"]},"/technology/programming/inheritance":{"title":"Inheritance","content":"\nA feature that allows the derivation of a new class from an existing class. Introduces a way to reuse existing code without duplicating them.\n\nA subclass inherits all the functionality of a superclass, but can also have its own unique attributes and methods.\n\n# Terminologies\n\n| Term | Definition |\n|:-:|:-|\n| Superclass (also parent or base class) | The class from which subclasses can be created from |\n| Subclass (also child or derived class) |  The class that inherits a superclass |\n\n# Declaration\n\nIn many OOP-based languages, a subclass can be created using the `:` symbol as such:\n\n- C#\n```C#\n// CashCard is an existing class that is the superclass.\n// MemberCashCard is the new class deriving from CashCard.\nclass MemberCashCard: CashCard\n{\n\t// Unique attributes, properties, and methods\n}\n```\n- Python\n```python\n# CashCard is an existing class that is the superclass.\n# MemberCashCard is the new class deriving from CashCard.\nclass MemberCashCard(CashCard):\n\t# Unique attributes, properties, and methods\n```\n\n# Inheriting superclass\n\nA subclass can call upon the superclasses's attributes and properties, though the exact method differs across programming languages.\n\nSome examples when inheriting superclass is used include:\n- calling the superclass's constructors to initialise the attributes in the superclass;\n- calling the superclass's printing method to retrieve information in the superclass; and\n- calling a method in the superclass.\n\n- C#\n```c#\n// Defining the constructor for MySubClass\npublic MySubClass(subparams) : base(superparams)\n{\n\t// other initialization\n}\n```","lastmodified":"2023-04-25T01:21:29.109539328Z","tags":["technology","programming"]},"/technology/programming/object-oriented-programming":{"title":"Object-oriented programming","content":"\nA computing programming model that models a system as a collection of objects, of which each object represents a particular part of the system[^1]. Generally involves the use of [[technology/programming/class|classes]] and objects.\n\nObject-oriented programming has four main concepts:\n\t- [[technology/programming/encapsulation|encapsulation]];\n\t- [[technology/programming/inheritance|inheritance]];\n\t- [[technologies/programming/classes|abstract classes and instances]]; and\n\t- [[technologies/programming/polymorphism|polymorphism]]\n\n[^1]: [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Object-oriented_programming)","lastmodified":"2023-04-25T01:21:29.109539328Z","tags":["technology","programming"]},"/technology/software":{"title":"Software","content":"\nSeries of related instructions that tells the computer what tasks to perform and how to perform them. Generally, there are two types of software in a computer:\n\n- system software — software that control or maintain the operations of the computer; and\n\t- [[technology/computers/operating-system|operating systems]] and utility programs are part of system software\n- application software — software that is designed to make users more productive or to assist them with personal tasks.\n\t- web browsers and spreadsheet software are examples of application software","lastmodified":"2023-04-25T01:21:29.109539328Z","tags":["technology","computers"]},"/technology/web3":{"title":"Web3","content":"\nAn idea of what a new web could be like, focused on the [[blockchain]], [[decentralisation]], and [[cryptocurrency]]. Not to be confused with Web 3.0, which is the next iteration of the [[World Wide Web]].","lastmodified":"2023-04-25T01:21:29.109539328Z","tags":["technology"]}}